{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\barstool\\\\boxscore-widget\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst periods = {\n  MLB: {\n    normal: '<CARDNUM> Inning',\n    small: '<NUM>',\n    OT: '<NUM>',\n    extras: [{\n      'R': {\n        awayStat: 'away_batter_totals',\n        awaySubStat: 'runs',\n        homeStat: 'home_batter_totals',\n        homeSubStat: 'runs'\n      }\n    }, {\n      'H': {\n        awayStat: 'away_batter_totals',\n        awaySubStat: 'hits',\n        homeStat: 'home_batter_totals',\n        homeSubStat: 'hits'\n      }\n    }, {\n      'E': {\n        awayStat: 'away_errors',\n        awaySubStat: 'away_errors',\n        homeStat: 'home_errors',\n        homeSubStat: 'home_errors'\n      }\n    }]\n  },\n  NBA: {\n    normal: '<CARDNUM> Quarter',\n    small: 'Q<NUM>',\n    OT: 'OT<NUM>',\n    extras: [{\n      'T': {\n        awayStat: '<TOTAL>',\n        homeStat: '<TOTAL>',\n        awaySubStat: false,\n        homeSubStat: false\n      }\n    }]\n  }\n};\nconst playerStats = {\n  NBA: {\n    searchBy: 'points',\n    alsoShow: []\n  },\n  MLB: {\n    searchBy: ['win', 'loss', 'save'],\n    alsoShow: ['innings_pitched', 'earned_runs', 'strike_outs', 'era']\n  }\n};\n\nclass PlayerContainer extends React.Component {\n  constructStatPlayer(playerObj) {\n    const stat = playerStats[this.props.league].searchBy;\n    let playerPerformance = '';\n    playerPerformance += \"\".concat(capitalizeString(stat), \": \").concat(playerObj[stat]);\n    return React.createElement(\"div\", {\n      className: \"player-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, playerPerformance)));\n  }\n\n  constructCategoryPlayer(category, playerObj) {\n    const alsoShow = playerStats[this.props.league].alsoShow;\n\n    if (alsoShow.length > 0) {\n      return React.createElement(\"div\", {\n        className: \"player-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, category.toUpperCase()), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.createPlayerStats(playerObj, alsoShow))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"player-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, category.toUpperCase())));\n    }\n  }\n\n  createPlayerStats(playerObj, stats) {\n    let returnMsg = '';\n    stats.forEach(stat => {\n      if (playerObj[stat]) {\n        returnMsg += \"\".concat(stat.toUpperCase().replace(/_/g, ' '), \": \").concat(playerObj[stat], \", \");\n      }\n    });\n\n    if (returnMsg.length > 0) {\n      returnMsg = returnMsg.slice(0, -2);\n    }\n\n    return returnMsg;\n  }\n\n  createPlayerName(name, team) {\n    return \"\".concat(name, \" (\").concat(team, \")\");\n  }\n\n  render() {\n    let players = [];\n\n    if (Array.isArray(this.props.playerInfo)) {\n      this.props.playerInfo.forEach(player => {\n        players.push(this.constructStatPlayer(player));\n      });\n    } else {\n      for (let key in this.props.playerInfo) {\n        if (this.props.playerInfo.hasOwnProperty(key)) {\n          players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key]));\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, players));\n  }\n\n}\n\nclass GameContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(TeamColumn, {\n      gameStatus: this.props.gameStatus,\n      teams: this.props.teams,\n      useSmall: this.props.useSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(ScoreTable, {\n      useSmall: this.props.useSmall,\n      gameScore: this.props.gameScore,\n      league: this.props.league,\n      extraStats: this.props.extraStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ScoreTable extends React.Component {\n  createHeaderRow(periodLen, extraStatHeaders) {\n    const tempArr = Array.apply(null, Array(periodLen)).map((x, i) => {\n      return i + 1;\n    });\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, tempArr.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.generateHeaderLabel(val, false));\n    }), extraStatHeaders.map(header => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, header);\n    }));\n  }\n\n  createScoreRow(scores, extraStats) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, scores.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, val);\n    }), extraStats.map(val => {\n      if (val === '<TOTAL>') {\n        val = scores.reduce((acc, v) => acc + v);\n      }\n\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, val);\n    }));\n  }\n\n  generateHeaderLabel(idx, isOT) {\n    let returnStr = '';\n\n    if (isOT) {\n      returnStr += this.numReplace(periods[this.props.league].OT, idx);\n    } else if (this.props.useSmall) {\n      returnStr += this.numReplace(periods[this.props.league].small, idx);\n    } else {\n      returnStr += this.numReplace(periods[this.props.league].normal, idx);\n    }\n\n    return returnStr;\n  }\n\n  numReplace(str, idx) {\n    if (str.includes('<NUM>')) {\n      return str.replace('<NUM>', idx);\n    } else {\n      return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n    }\n  }\n\n  getNumberWithOrdinal(n) {\n    let s = [\"th\", \"st\", \"nd\", \"rd\"],\n        v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  }\n\n  createTableData() {\n    let table = [];\n    const extraHeaders = this.props.extraStats.map(val => {\n      return Object.keys(val)[0];\n    });\n    table.push(this.createHeaderRow(this.props.gameScore.home.length, extraHeaders));\n    table.push(this.createScoreRow(this.props.gameScore.away, generateTeamStatsArray(this.props.extraStats, 'away')));\n    table.push(this.createScoreRow(this.props.gameScore.home, generateTeamStatsArray(this.props.extraStats, 'home')));\n    return table;\n  }\n\n  render() {\n    const tableData = this.createTableData();\n    return React.createElement(\"div\", {\n      className: \"game-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, tableData)));\n  }\n\n}\n\nclass TeamColumn extends React.Component {\n  render() {\n    let propToUse = '';\n\n    if (this.props.useSmall) {\n      propToUse += 'abbv';\n    } else {\n      propToUse += 'name';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"teams-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, capitalizeString(this.props.gameStatus))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, this.props.teams.away[propToUse])), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, this.props.teams.home[propToUse])))));\n  }\n\n}\n\nclass Boxscore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: '',\n      league: '',\n      scoreInfo: {\n        away: [],\n        home: []\n      },\n      playerInfo: {},\n      teams: {\n        away: '',\n        home: ''\n      },\n      useSmall: false,\n      extraStats: []\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  checkWindowSize() {\n    let width = window.innerWidth;\n\n    if (width < 1150 && !this.state.useSmall || width >= 1150 && this.state.useSmall) {\n      this.updateSizeState();\n    }\n  }\n\n  updateSizeState() {\n    const newState = this.state;\n    newState.useSmall = !this.state.useSmall;\n    this.setState(newState);\n  }\n\n  async getGameInfo(leagueType) {\n    const gameInfo = await getGameInfo(leagueType);\n    const gameScore = await getGameScore(leagueType);\n    const teamInfo = await getTeamInfo(leagueType);\n    const playerInfo = await getPlayerInfo(leagueType);\n    const extraStats = await getExtraStats(leagueType);\n    let stateObj = {\n      league: leagueType\n    };\n    stateObj.gameStatus = gameInfo.status;\n    stateObj.location = gameInfo.location;\n    stateObj.scoreInfo = gameScore;\n    stateObj.teams = teamInfo;\n    stateObj.playerInfo = playerInfo;\n    stateObj.extraStats = extraStats;\n    return stateObj;\n  }\n\n  componentDidMount() {\n    this.getGameInfo('MLB').then(newState => {\n      this.setState(newState);\n    });\n    window.addEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"boxscore-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      gameStatus: this.state.gameStatus,\n      gameScore: this.state.scoreInfo,\n      teams: this.state.teams,\n      useSmall: this.state.useSmall,\n      league: this.state.league,\n      extraStats: this.state.extraStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(PlayerContainer, {\n      playerInfo: this.state.playerInfo,\n      league: this.state.league,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Boxscore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 400\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ========== HELPER FUNCTIONS ========== */\n\nfunction generateTeamStatsArray(arr, teamType) {\n  let returnArr = [];\n\n  for (const obj of arr) {\n    let key = Object.keys(obj)[0];\n    returnArr.push(obj[key][teamType]);\n  }\n\n  return returnArr;\n}\n\nasync function getExtraStats(leagueType) {\n  let returnStats = [];\n  const extraStats = periods[leagueType].extras;\n\n  for (const obj of extraStats) {\n    const statKey = Object.keys(obj)[0];\n    let tempObj = {};\n    let tempData = await getTeamStats(leagueType, obj[statKey]);\n    tempObj[statKey] = tempData;\n    returnStats.push(tempObj);\n  }\n\n  return returnStats;\n}\n\nasync function getTeamStats(leagueType, stateObj) {\n  let tempObj = {\n    away: {},\n    home: {}\n  };\n  let apiEndpoint = '';\n  let returnData; // Get Away Stats\n\n  if (stateObj.awayStat === '<TOTAL>') {\n    tempObj.away = '<TOTAL>';\n  } else {\n    apiEndpoint = apiURLConstructor(leagueType, stateObj.awayStat);\n    returnData = await fetchUrlData(apiEndpoint);\n\n    if (stateObj.awaySubStat) {\n      tempObj.away = returnData[stateObj.awaySubStat];\n    } else {\n      tempObj.away = returnData;\n    }\n  } // Get Home Stats\n\n\n  if (stateObj.homeStat === '<TOTAL>') {\n    tempObj.home = '<TOTAL>';\n  } else {\n    apiEndpoint = apiURLConstructor(leagueType, stateObj.homeStat);\n    returnData = await fetchUrlData(apiEndpoint);\n\n    if (stateObj.homeSubStat) {\n      tempObj.home = returnData[stateObj.homeSubStat];\n    } else {\n      tempObj.home = returnData;\n    }\n  }\n\n  return tempObj;\n}\n\nasync function getGameInfo(leagueType) {\n  const apiEndpoint = apiURLConstructor(leagueType, 'event_information');\n  const eventData = await fetchUrlData(apiEndpoint);\n  const returnObj = {\n    status: eventData.status,\n    location: constructLocObj(eventData.site)\n  };\n  return returnObj;\n}\n\nasync function getGameScore(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: homeData,\n    away: awayData\n  };\n  return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: constructTeamObj(homeData),\n    away: constructTeamObj(awayData)\n  };\n  return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n  const playerStatCategories = getLeagueStatCategory(leagueType);\n  const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n  const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n  const homePlayerData = await fetchUrlData(homeEndpoint);\n  const awayPlayerData = await fetchUrlData(awayEndpoint);\n  const playerDataObj = {\n    home: homePlayerData,\n    away: awayPlayerData\n  };\n  const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n  return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n  const statToFind = playerStats[leagueType].searchBy;\n\n  if (!Array.isArray(statToFind)) {\n    const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, statToFind, 3); // This returns an array\n\n    return rankedPlayers;\n  } else {\n    const players = findPlayerStats(statToFind, playerDataObj.home, playerDataObj.away); // This returns an object\n\n    return players;\n  }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n  const totalPlayers = arr1.concat(arr2);\n  let returnObj = {};\n\n  for (let entry of totalPlayers) {\n    if (entry[statsArr[0]]) {\n      returnObj[statsArr[0]] = entry;\n    } else if (entry[statsArr[1]]) {\n      returnObj[statsArr[1]] = entry;\n    } else if (entry[statsArr[2]]) {\n      returnObj[statsArr[2]] = entry;\n    } // Max amount we can give back\n\n\n    if (Object.keys(returnObj).length === 3) {\n      break;\n    }\n  }\n\n  return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n  const totalPlayers = arr1.concat(arr2);\n  return totalPlayers.sort((a, b) => statComparison(a, b, stat)).slice().filter((val, i) => {\n    return i < n;\n  });\n}\n\nfunction statComparison(a, b, stat) {\n  if (b[stat] > a[stat]) {\n    return 1;\n  } else if (a[stat] > b[stat]) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n  if (leagueType === 'NBA') {\n    return ['home_stats', 'away_stats'];\n  } else {\n    return ['home_pitchers', 'away_pitchers'];\n  }\n}\n\nfunction constructTeamObj(obj) {\n  return {\n    name: obj.full_name,\n    abbv: obj.abbreviation\n  };\n}\n\nfunction constructLocObj(obj) {\n  return {\n    name: \"\".concat(obj.city, \", \").concat(obj.state),\n    stadium: obj.name\n  };\n}\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\n\n\nfunction fetchUrlData(url) {\n  return new Promise((res, rej) => {\n    // Get our endpoint data\n    fetch(url).then(resp => {\n      // If it came back propertly, return it\n      if (resp.status === 200) {\n        res(resp.json()); // Otherwise send the error\n      } else {\n        rej(resp.statusText);\n      }\n    }).catch(err => {\n      rej(err);\n    });\n  });\n}\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\n\n\nfunction apiURLConstructor(league, typeOfStat) {\n  let baseURL = '/api/games';\n\n  if (league) {\n    baseURL += \"/\".concat(league.toUpperCase());\n  }\n\n  if (typeOfStat) {\n    baseURL += \"?stats=\".concat(typeOfStat);\n  }\n\n  return baseURL;\n}\n\nfunction capitalizeString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\index.js"],"names":["React","ReactDOM","periods","MLB","normal","small","OT","extras","awayStat","awaySubStat","homeStat","homeSubStat","NBA","playerStats","searchBy","alsoShow","PlayerContainer","Component","constructStatPlayer","playerObj","stat","props","league","playerPerformance","capitalizeString","createPlayerName","display_name","team_abbreviation","constructCategoryPlayer","category","length","toUpperCase","createPlayerStats","stats","returnMsg","forEach","replace","slice","name","team","render","players","Array","isArray","playerInfo","player","push","key","hasOwnProperty","GameContainer","gameStatus","teams","useSmall","gameScore","extraStats","ScoreTable","createHeaderRow","periodLen","extraStatHeaders","tempArr","apply","map","x","i","val","generateHeaderLabel","header","createScoreRow","scores","reduce","acc","v","idx","isOT","returnStr","numReplace","str","includes","getNumberWithOrdinal","n","s","createTableData","table","extraHeaders","Object","keys","home","away","generateTeamStatsArray","tableData","TeamColumn","propToUse","Boxscore","constructor","state","scoreInfo","componentWillUnmount","window","removeEventListener","checkWindowSize","width","innerWidth","updateSizeState","newState","setState","getGameInfo","leagueType","gameInfo","getGameScore","teamInfo","getTeamInfo","getPlayerInfo","getExtraStats","stateObj","status","location","componentDidMount","then","addEventListener","document","getElementById","arr","teamType","returnArr","obj","returnStats","statKey","tempObj","tempData","getTeamStats","apiEndpoint","returnData","apiURLConstructor","fetchUrlData","eventData","returnObj","constructLocObj","site","homeEndpoint","awayEndpoint","homeData","awayData","constructTeamObj","playerStatCategories","getLeagueStatCategory","homePlayerData","awayPlayerData","playerDataObj","finalPlayerObj","createPlayerDataObj","statToFind","rankedPlayers","getNHighestTotals","findPlayerStats","statsArr","arr1","arr2","totalPlayers","concat","entry","sort","a","b","statComparison","filter","full_name","abbv","abbreviation","city","stadium","url","Promise","res","rej","fetch","resp","json","statusText","catch","err","typeOfStat","baseURL","charAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst periods = {\n    MLB: {\n        normal: '<CARDNUM> Inning',\n        small: '<NUM>',\n        OT: '<NUM>',\n        extras: [\n            {\n                'R': {\n                    awayStat: 'away_batter_totals',\n                    awaySubStat: 'runs',\n                    homeStat: 'home_batter_totals',\n                    homeSubStat: 'runs'\n                }\n            },\n            {\n                'H': {\n                    awayStat: 'away_batter_totals',\n                    awaySubStat: 'hits',\n                    homeStat: 'home_batter_totals',\n                    homeSubStat: 'hits'\n                }\n            },\n            {\n                'E': {\n                    awayStat: 'away_errors',\n                    awaySubStat: 'away_errors',\n                    homeStat: 'home_errors',\n                    homeSubStat: 'home_errors'\n                }\n            }\n        ]\n    },\n    NBA: {\n        normal: '<CARDNUM> Quarter',\n        small: 'Q<NUM>',\n        OT: 'OT<NUM>',\n        extras: [\n            {\n                'T': {\n                    awayStat: '<TOTAL>',\n                    homeStat: '<TOTAL>',\n                    awaySubStat: false,\n                    homeSubStat: false\n                }\n            }\n        ]\n    }\n}\n\nconst playerStats = {\n    NBA: {\n        searchBy: 'points',\n        alsoShow: []\n    },\n    MLB: {\n        searchBy: ['win', 'loss', 'save'],\n        alsoShow: ['innings_pitched', 'earned_runs', 'strike_outs', 'era']\n    }\n}\n\nclass PlayerContainer extends React.Component {\n    constructStatPlayer(playerObj) {\n        const stat = playerStats[this.props.league].searchBy\n        let playerPerformance = '';\n        playerPerformance += `${capitalizeString(stat)}: ${playerObj[stat]}`;\n\n        return (\n            <div className=\"player-card\">\n                <div className=\"stats\">\n                    <div className=\"player-divider\">\n                        {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                    </div>\n                    <div className=\"player-divider\">\n                        {playerPerformance}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    constructCategoryPlayer(category, playerObj) {\n        const alsoShow = playerStats[this.props.league].alsoShow;\n\n        if (alsoShow.length > 0) {\n            return (\n                <div className=\"player-card\">\n                    <div className=\"stats\">\n                        <div className=\"player-divider\">\n                            {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                        </div>\n                        <div className=\"player-divider\">\n                            {category.toUpperCase()}\n                        </div>\n                        <div className=\"player-divider\">\n                            {this.createPlayerStats(playerObj, alsoShow)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"player-card\">\n                    <div className=\"stats\">\n                        <div className=\"player-divider\">\n                            {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                        </div>\n                        <div className=\"player-divider\">\n                            {category.toUpperCase()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    createPlayerStats(playerObj, stats) {\n        let returnMsg = '';\n\n        stats.forEach((stat) => {\n            if (playerObj[stat]) {\n                returnMsg += `${stat.toUpperCase().replace(/_/g, ' ')}: ${playerObj[stat]}, `;\n            }\n        });\n\n        if (returnMsg.length > 0) {\n            returnMsg = returnMsg.slice(0, -2);\n        }\n\n        return returnMsg;\n    }\n\n    createPlayerName (name, team) {\n        return `${name} (${team})`;\n    }\n\n    render() {\n        let players = [];\n\n        if (Array.isArray(this.props.playerInfo)) {\n            this.props.playerInfo.forEach((player) => {\n                players.push(this.constructStatPlayer(player));\n            });\n        } else {\n            for (let key in this.props.playerInfo) {\n                if (this.props.playerInfo.hasOwnProperty(key)) {\n                    players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key]));\n                }\n            }\n        }\n\n        return (\n            <div className=\"player-container\">\n                <div className=\"players\">\n                    {players}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GameContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"game-container\">\n                <TeamColumn gameStatus={this.props.gameStatus}\n                    teams={this.props.teams}\n                    useSmall={this.props.useSmall} />\n                <ScoreTable useSmall={this.props.useSmall}\n                    gameScore={this.props.gameScore}\n                    league={this.props.league}\n                    extraStats={this.props.extraStats} />\n            </div>\n        );\n    }\n}\n\nclass ScoreTable extends React.Component {\n    createHeaderRow(periodLen, extraStatHeaders) {\n        const tempArr = Array.apply(null, Array(periodLen))\n            .map((x, i) => { \n                return i + 1;\n            });\n\n        return (\n            <tr>\n                {\n                    tempArr.map((val) => {\n                        return <td className=\"score-cell\">{this.generateHeaderLabel(val, false)}</td>;\n                    })\n                }\n                {\n                    extraStatHeaders.map((header) => {\n                        return <td className=\"score-cell\">{header}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    createScoreRow(scores, extraStats) {\n        return (\n            <tr>\n                {\n                    scores.map((val) => {\n                        return <td className=\"score-cell\">{val}</td>\n                    })\n                }\n                {\n                    extraStats.map((val) => {\n                        if (val === '<TOTAL>') {\n                            val = scores.reduce((acc, v) => acc + v);\n                        }\n\n                        return <td className=\"score-cell\">{val}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    generateHeaderLabel(idx, isOT) {\n        let returnStr = '';\n\n        if (isOT) {\n            returnStr += this.numReplace(periods[this.props.league].OT, idx);\n        } else if (this.props.useSmall) {\n            returnStr += this.numReplace(periods[this.props.league].small, idx);\n        } else {\n            returnStr += this.numReplace(periods[this.props.league].normal, idx);\n        }\n\n        return returnStr;\n    }\n\n    numReplace(str, idx) {\n        if (str.includes('<NUM>')) {\n            return str.replace('<NUM>', idx);\n        } else {\n            return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n        }\n    }\n\n    getNumberWithOrdinal(n) {\n        let s=[\"th\",\"st\",\"nd\",\"rd\"],\n        v= n % 100;\n        return n + (s[(v-20)%10]||s[v]||s[0]);\n     }\n\n    createTableData() {\n        let table = [];\n        const extraHeaders = this.props.extraStats.map((val) => {\n            return Object.keys(val)[0];\n        });\n\n        table.push(this.createHeaderRow(this.props.gameScore.home.length, extraHeaders));\n        table.push(this.createScoreRow(this.props.gameScore.away, generateTeamStatsArray(this.props.extraStats, 'away')));\n        table.push(this.createScoreRow(this.props.gameScore.home, generateTeamStatsArray(this.props.extraStats, 'home')));\n\n        return table;\n    }\n\n    render() {\n        const tableData = this.createTableData();\n\n        return (\n            <div className=\"game-score\">\n                <table>\n                    <tbody>\n                        {tableData}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass TeamColumn extends React.Component {\n    render() {\n        let propToUse = '';\n\n        if (this.props.useSmall) {\n            propToUse += 'abbv';\n        } else {\n            propToUse += 'name';\n        }\n\n        return (\n            <div className=\"teams-container\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {capitalizeString(this.props.gameStatus)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.away[propToUse]}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.home[propToUse]}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass Boxscore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameStatus: '',\n            league: '',\n            scoreInfo: {away: [], home: []},\n            playerInfo: {},\n            teams: {away: '', home: ''},\n            useSmall: false,\n            extraStats: []\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', () => {\n            this.checkWindowSize()\n        });\n    }\n\n    checkWindowSize() {\n        let width = window.innerWidth;\n\n        if ((width < 1150 && !this.state.useSmall) || (width >= 1150 && this.state.useSmall)) {\n            this.updateSizeState();\n        }\n    }\n\n    updateSizeState() {\n        const newState = this.state;\n        newState.useSmall = !this.state.useSmall;\n\n        this.setState(newState);\n    }\n\n    async getGameInfo(leagueType) {\n        const gameInfo = await getGameInfo(leagueType);\n        const gameScore = await getGameScore(leagueType);\n        const teamInfo = await getTeamInfo(leagueType);\n        const playerInfo = await getPlayerInfo(leagueType);\n        const extraStats = await getExtraStats(leagueType);\n        let stateObj = {\n            league: leagueType\n        };\n\n        stateObj.gameStatus = gameInfo.status;\n        stateObj.location = gameInfo.location;\n        stateObj.scoreInfo = gameScore;\n        stateObj.teams = teamInfo;\n        stateObj.playerInfo = playerInfo;\n        stateObj.extraStats = extraStats;\n        \n        return stateObj;\n    }\n\n    componentDidMount() {\n        this.getGameInfo('MLB')\n            .then((newState) => {\n                this.setState(newState);\n            });\n\n        window.addEventListener('resize', () => {\n            this.checkWindowSize();\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"boxscore-container\">\n                <GameContainer gameStatus={this.state.gameStatus}\n                               gameScore={this.state.scoreInfo}\n                               teams={this.state.teams}\n                               useSmall={this.state.useSmall}\n                               league={this.state.league}\n                               extraStats={this.state.extraStats}/>\n                <PlayerContainer playerInfo={this.state.playerInfo}\n                                 league={this.state.league} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Boxscore />,\n    document.getElementById('root')\n);\n\n/* ========== HELPER FUNCTIONS ========== */\n\nfunction generateTeamStatsArray(arr, teamType) {\n    let returnArr = [];\n\n    for (const obj of arr) {\n        let key = Object.keys(obj)[0];\n\n        returnArr.push(obj[key][teamType]);\n    }\n\n    return returnArr;\n}\n\nasync function getExtraStats(leagueType) {\n    let returnStats = [];\n    const extraStats = periods[leagueType].extras;\n\n    for (const obj of extraStats) {\n        const statKey = Object.keys(obj)[0];\n        let tempObj ={};\n\n        let tempData = await getTeamStats(leagueType, obj[statKey]);\n        tempObj[statKey] = tempData;\n        returnStats.push(tempObj);\n    }\n\n    return returnStats;\n}\n\nasync function getTeamStats(leagueType, stateObj) {\n    let tempObj = { away: {}, home: {} };\n    let apiEndpoint = '';\n    let returnData;\n\n    // Get Away Stats\n    if (stateObj.awayStat === '<TOTAL>') {\n        tempObj.away = '<TOTAL>';\n    } else {\n        apiEndpoint = apiURLConstructor(leagueType, stateObj.awayStat);\n        returnData = await fetchUrlData(apiEndpoint);\n\n        if (stateObj.awaySubStat) {\n            tempObj.away = returnData[stateObj.awaySubStat];\n        } else {\n            tempObj.away = returnData;\n        }\n    }\n\n    // Get Home Stats\n    if (stateObj.homeStat === '<TOTAL>') {\n        tempObj.home = '<TOTAL>';\n    } else {\n        apiEndpoint = apiURLConstructor(leagueType, stateObj.homeStat);\n        returnData = await fetchUrlData(apiEndpoint);\n\n        if (stateObj.homeSubStat) {\n            tempObj.home = returnData[stateObj.homeSubStat];\n        } else {\n            tempObj.home = returnData;\n        }\n    }\n\n    return tempObj;\n}\n\nasync function getGameInfo(leagueType) {\n    const apiEndpoint = apiURLConstructor(leagueType, 'event_information')\n    const eventData = await fetchUrlData(apiEndpoint);\n    const returnObj = {\n        status: eventData.status,\n        location: constructLocObj(eventData.site)\n    };\n\n    return returnObj\n}\n\nasync function getGameScore(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: homeData,\n        away: awayData\n    }\n\n    return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: constructTeamObj(homeData),\n        away: constructTeamObj(awayData)\n    }\n\n    return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n    const playerStatCategories = getLeagueStatCategory(leagueType);\n    const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n    const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n    const homePlayerData = await fetchUrlData(homeEndpoint);\n    const awayPlayerData = await fetchUrlData(awayEndpoint);\n    const playerDataObj = {\n        home: homePlayerData,\n        away: awayPlayerData\n    };\n    const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n\n    return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n    const statToFind = playerStats[leagueType].searchBy;\n\n    if (!Array.isArray(statToFind)) {\n        const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, statToFind, 3);\n        \n        // This returns an array\n        return rankedPlayers\n    } else {\n        const players = findPlayerStats(statToFind, playerDataObj.home, playerDataObj.away);\n\n        // This returns an object\n        return players;\n    }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n    const totalPlayers = arr1.concat(arr2);\n    let returnObj = {};\n\n    for (let entry of totalPlayers) {\n        if (entry[statsArr[0]]) {\n            returnObj[statsArr[0]] = entry;\n        } else if (entry[statsArr[1]]) {\n            returnObj[statsArr[1]] = entry;\n        } else if (entry[statsArr[2]]) {\n            returnObj[statsArr[2]] = entry;\n        }\n\n        // Max amount we can give back\n        if (Object.keys(returnObj).length === 3) {\n            break;\n        }\n    }\n\n    return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n    const totalPlayers = arr1.concat(arr2);\n\n    return totalPlayers\n        .sort((a, b) => statComparison(a, b, stat))\n        .slice()\n        .filter((val, i) => {\n            return i < n;\n        });\n}\n\nfunction statComparison(a, b, stat) {\n    if (b[stat] > a[stat]) {\n        return 1;\n    } else if (a[stat] > b[stat]) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n    if (leagueType === 'NBA') {\n        return ['home_stats', 'away_stats'];\n    } else {\n        return ['home_pitchers', 'away_pitchers']\n    }\n}\n\nfunction constructTeamObj(obj) {\n    return {\n        name: obj.full_name,\n        abbv: obj.abbreviation\n    };\n}\n\nfunction constructLocObj(obj) {\n    return {\n        name: `${obj.city}, ${obj.state}`,\n        stadium: obj.name\n    };\n}\n\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\nfunction fetchUrlData(url) {\n    return new Promise((res, rej) => {\n        // Get our endpoint data\n        fetch(url)\n            .then((resp) => {\n                // If it came back propertly, return it\n                if (resp.status === 200) {\n                    res(resp.json());\n                // Otherwise send the error\n                } else {\n                    rej(resp.statusText);\n                }\n            })\n            .catch((err) => {\n                rej(err);\n            });\n    });\n}\n\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\nfunction apiURLConstructor(league, typeOfStat) {\n    let baseURL = '/api/games';\n\n    if (league) {\n        baseURL += `/${league.toUpperCase()}`;\n    }\n\n    if (typeOfStat) {\n        baseURL += `?stats=${typeOfStat}`;\n    }\n\n    return baseURL;\n}\n\nfunction capitalizeString(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}"]},"metadata":{},"sourceType":"module"}