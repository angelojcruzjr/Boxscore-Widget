{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\barstool\\\\boxscore-widget\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as constants from './constants.js';\nimport * as utils from './utils.js';\n\nclass PlayerContainer extends React.Component {\n  constructStatPlayer(playerObj) {\n    const stat = constants.playerStats[this.props.league].searchBy;\n    let playerPerformance = '';\n    playerPerformance += \"\".concat(utils.capitalizeString(stat), \": \").concat(playerObj[stat]);\n    return React.createElement(\"div\", {\n      className: \"player-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, playerPerformance), constants.playerStats[this.props.league].alsoShow.length > 0 && React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.createPlayerStats(playerObj, constants.playerStats[this.props.league].alsoShow))));\n  }\n\n  constructCategoryPlayer(category, playerObj) {\n    const alsoShow = constants.playerStats[this.props.league].alsoShow;\n\n    if (alsoShow.length > 0) {\n      return React.createElement(\"div\", {\n        className: \"player-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, category.toUpperCase()), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.createPlayerStats(playerObj, alsoShow))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"player-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, category.toUpperCase())));\n    }\n  }\n\n  createPlayerStats(playerObj, stats) {\n    let returnMsg = '';\n    stats.forEach(stat => {\n      if (playerObj[stat]) {\n        returnMsg += \"\".concat(stat.toUpperCase().replace(/_/g, ' '), \": \").concat(playerObj[stat], \", \");\n      }\n    });\n\n    if (returnMsg.length > 0) {\n      returnMsg = returnMsg.slice(0, -2);\n    }\n\n    return returnMsg;\n  }\n\n  createPlayerName(name, team) {\n    return \"\".concat(name, \" (\").concat(team, \")\");\n  }\n\n  render() {\n    let players = [];\n\n    if (Array.isArray(this.props.playerInfo)) {\n      this.props.playerInfo.forEach(player => {\n        players.push(this.constructStatPlayer(player));\n      });\n    } else {\n      for (let key in this.props.playerInfo) {\n        if (this.props.playerInfo.hasOwnProperty(key)) {\n          players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key]));\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, players));\n  }\n\n}\n\nclass GameContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TeamColumn, {\n      gameStatus: this.props.gameStatus,\n      teams: this.props.teams,\n      useSmall: this.props.useSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(ScoreTable, {\n      useSmall: this.props.useSmall,\n      gameScore: this.props.gameScore,\n      league: this.props.league,\n      extraStats: this.props.extraStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ScoreTable extends React.Component {\n  createHeaderRow(periodLen, extraStatHeaders) {\n    const tempArr = Array.apply(null, Array(periodLen)).map((x, i) => {\n      return i + 1;\n    });\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, tempArr.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.generateHeaderLabel(val, false));\n    }), extraStatHeaders.map(header => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, header);\n    }));\n  }\n\n  createScoreRow(scores, extraStats) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, scores.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, val);\n    }), extraStats.map(val => {\n      if (val === '<TOTAL>') {\n        val = scores.reduce((acc, v) => acc + v);\n      }\n\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, val);\n    }));\n  }\n\n  generateHeaderLabel(idx, isOT) {\n    let returnStr = '';\n\n    if (isOT) {\n      returnStr += this.numReplace(constants.periods[this.props.league].OT, idx);\n    } else if (this.props.useSmall) {\n      returnStr += this.numReplace(constants.periods[this.props.league].small, idx);\n    } else {\n      returnStr += this.numReplace(constants.periods[this.props.league].normal, idx);\n    }\n\n    return returnStr;\n  }\n\n  numReplace(str, idx) {\n    if (str.includes('<NUM>')) {\n      return str.replace('<NUM>', idx);\n    } else {\n      return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n    }\n  }\n\n  getNumberWithOrdinal(n) {\n    let s = [\"th\", \"st\", \"nd\", \"rd\"],\n        v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  }\n\n  createTableData() {\n    let table = [];\n    const extraHeaders = this.props.extraStats.map(val => {\n      return Object.keys(val)[0];\n    });\n    table.push(this.createHeaderRow(this.props.gameScore.home.length, extraHeaders));\n    table.push(this.createScoreRow(this.props.gameScore.away, generateTeamStatsArray(this.props.extraStats, 'away')));\n    table.push(this.createScoreRow(this.props.gameScore.home, generateTeamStatsArray(this.props.extraStats, 'home')));\n    return table;\n  }\n\n  render() {\n    const tableData = this.createTableData();\n    return React.createElement(\"div\", {\n      className: \"game-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, tableData)));\n  }\n\n}\n\nclass TeamColumn extends React.Component {\n  render() {\n    let propToUse = '';\n\n    if (this.props.useSmall) {\n      propToUse += 'abbv';\n    } else {\n      propToUse += 'name';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"teams-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, utils.capitalizeString(this.props.gameStatus))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.props.teams.away[propToUse])), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.props.teams.home[propToUse])))));\n  }\n\n}\n\nclass Boxscore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: '',\n      league: '',\n      scoreInfo: {\n        away: [],\n        home: []\n      },\n      playerInfo: {},\n      teams: {\n        away: '',\n        home: ''\n      },\n      useSmall: false,\n      extraStats: []\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  checkWindowSize() {\n    let width = window.innerWidth;\n\n    if (width < 1150 && !this.state.useSmall || width >= 1150 && this.state.useSmall) {\n      this.updateSizeState();\n    }\n  }\n\n  updateSizeState() {\n    const newState = this.state;\n    newState.useSmall = !this.state.useSmall;\n    this.setState(newState);\n  }\n\n  async getGameInfo(leagueType) {\n    const gameInfo = await utils.getGameInformation(leagueType);\n    const gameScore = await utils.getGameScore(leagueType);\n    const teamInfo = await utils.getTeamInfo(leagueType);\n    const playerInfo = await utils.getPlayerInfo(leagueType);\n    const extraStats = await utils.getExtraStats(leagueType);\n    let stateObj = {\n      league: leagueType\n    };\n    stateObj.gameStatus = gameInfo.status;\n    stateObj.location = gameInfo.location;\n    stateObj.scoreInfo = gameScore;\n    stateObj.teams = teamInfo;\n    stateObj.playerInfo = playerInfo;\n    stateObj.extraStats = extraStats;\n    return stateObj;\n  }\n\n  componentDidMount() {\n    this.getGameInfo('MLB').then(newState => {\n      this.setState(newState);\n    });\n    window.addEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"boxscore-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      gameStatus: this.state.gameStatus,\n      gameScore: this.state.scoreInfo,\n      teams: this.state.teams,\n      useSmall: this.state.useSmall,\n      league: this.state.league,\n      extraStats: this.state.extraStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(PlayerContainer, {\n      playerInfo: this.state.playerInfo,\n      league: this.state.league,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Boxscore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 348\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ========== HELPER FUNCTIONS ========== */\n\nfunction generateTeamStatsArray(arr, teamType) {\n  let returnArr = [];\n\n  for (const obj of arr) {\n    let key = Object.keys(obj)[0];\n    returnArr.push(obj[key][teamType]);\n  }\n\n  return returnArr;\n}","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\index.js"],"names":["React","ReactDOM","constants","utils","PlayerContainer","Component","constructStatPlayer","playerObj","stat","playerStats","props","league","searchBy","playerPerformance","capitalizeString","createPlayerName","display_name","team_abbreviation","alsoShow","length","createPlayerStats","constructCategoryPlayer","category","toUpperCase","stats","returnMsg","forEach","replace","slice","name","team","render","players","Array","isArray","playerInfo","player","push","key","hasOwnProperty","GameContainer","gameStatus","teams","useSmall","gameScore","extraStats","ScoreTable","createHeaderRow","periodLen","extraStatHeaders","tempArr","apply","map","x","i","val","generateHeaderLabel","header","createScoreRow","scores","reduce","acc","v","idx","isOT","returnStr","numReplace","periods","OT","small","normal","str","includes","getNumberWithOrdinal","n","s","createTableData","table","extraHeaders","Object","keys","home","away","generateTeamStatsArray","tableData","TeamColumn","propToUse","Boxscore","constructor","state","scoreInfo","componentWillUnmount","window","removeEventListener","checkWindowSize","width","innerWidth","updateSizeState","newState","setState","getGameInfo","leagueType","gameInfo","getGameInformation","getGameScore","teamInfo","getTeamInfo","getPlayerInfo","getExtraStats","stateObj","status","location","componentDidMount","then","addEventListener","document","getElementById","arr","teamType","returnArr","obj"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;;AAEA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAC1CC,EAAAA,mBAAmB,CAACC,SAAD,EAAY;AAC3B,UAAMC,IAAI,GAAGN,SAAS,CAACO,WAAV,CAAsB,KAAKC,KAAL,CAAWC,MAAjC,EAAyCC,QAAtD;AACA,QAAIC,iBAAiB,GAAG,EAAxB;AACAA,IAAAA,iBAAiB,cAAOV,KAAK,CAACW,gBAAN,CAAuBN,IAAvB,CAAP,eAAwCD,SAAS,CAACC,IAAD,CAAjD,CAAjB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKO,gBAAL,CAAsBR,SAAS,CAACS,YAAhC,EAA8CT,SAAS,CAACU,iBAAxD,CADL,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,iBADL,CAJJ,EAQQX,SAAS,CAACO,WAAV,CAAsB,KAAKC,KAAL,CAAWC,MAAjC,EAAyCO,QAAzC,CAAkDC,MAAlD,GAA2D,CAA3D,IACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,iBAAL,CAAuBb,SAAvB,EAAkCL,SAAS,CAACO,WAAV,CAAsB,KAAKC,KAAL,CAAWC,MAAjC,EAAyCO,QAA3E,CADL,CATR,CADJ,CADJ;AAkBH;;AAEDG,EAAAA,uBAAuB,CAACC,QAAD,EAAWf,SAAX,EAAsB;AACzC,UAAMW,QAAQ,GAAGhB,SAAS,CAACO,WAAV,CAAsB,KAAKC,KAAL,CAAWC,MAAjC,EAAyCO,QAA1D;;AAEA,QAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACrB,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,gBAAL,CAAsBR,SAAS,CAACS,YAAhC,EAA8CT,SAAS,CAACU,iBAAxD,CADL,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,QAAQ,CAACC,WAAT,EADL,CAJJ,EAOI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,iBAAL,CAAuBb,SAAvB,EAAkCW,QAAlC,CADL,CAPJ,CADJ,CADJ;AAeH,KAhBD,MAgBO;AACH,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,gBAAL,CAAsBR,SAAS,CAACS,YAAhC,EAA8CT,SAAS,CAACU,iBAAxD,CADL,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,QAAQ,CAACC,WAAT,EADL,CAJJ,CADJ,CADJ;AAYH;AACJ;;AAEDH,EAAAA,iBAAiB,CAACb,SAAD,EAAYiB,KAAZ,EAAmB;AAChC,QAAIC,SAAS,GAAG,EAAhB;AAEAD,IAAAA,KAAK,CAACE,OAAN,CAAelB,IAAD,IAAU;AACpB,UAAID,SAAS,CAACC,IAAD,CAAb,EAAqB;AACjBiB,QAAAA,SAAS,cAAOjB,IAAI,CAACe,WAAL,GAAmBI,OAAnB,CAA2B,IAA3B,EAAiC,GAAjC,CAAP,eAAiDpB,SAAS,CAACC,IAAD,CAA1D,OAAT;AACH;AACJ,KAJD;;AAMA,QAAIiB,SAAS,CAACN,MAAV,GAAmB,CAAvB,EAA0B;AACtBM,MAAAA,SAAS,GAAGA,SAAS,CAACG,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACH;;AAED,WAAOH,SAAP;AACH;;AAEDV,EAAAA,gBAAgB,CAAEc,IAAF,EAAQC,IAAR,EAAc;AAC1B,qBAAUD,IAAV,eAAmBC,IAAnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,EAAd;;AAEA,QAAIC,KAAK,CAACC,OAAN,CAAc,KAAKxB,KAAL,CAAWyB,UAAzB,CAAJ,EAA0C;AACtC,WAAKzB,KAAL,CAAWyB,UAAX,CAAsBT,OAAtB,CAA+BU,MAAD,IAAY;AACtCJ,QAAAA,OAAO,CAACK,IAAR,CAAa,KAAK/B,mBAAL,CAAyB8B,MAAzB,CAAb;AACH,OAFD;AAGH,KAJD,MAIO;AACH,WAAK,IAAIE,GAAT,IAAgB,KAAK5B,KAAL,CAAWyB,UAA3B,EAAuC;AACnC,YAAI,KAAKzB,KAAL,CAAWyB,UAAX,CAAsBI,cAAtB,CAAqCD,GAArC,CAAJ,EAA+C;AAC3CN,UAAAA,OAAO,CAACK,IAAR,CAAa,KAAKhB,uBAAL,CAA6BiB,GAA7B,EAAkC,KAAK5B,KAAL,CAAWyB,UAAX,CAAsBG,GAAtB,CAAlC,CAAb;AACH;AACJ;AACJ;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,OADL,CADJ,CADJ;AAOH;;AAvGyC;;AA0G9C,MAAMQ,aAAN,SAA4BxC,KAAK,CAACK,SAAlC,CAA4C;AACxC0B,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKrB,KAAL,CAAW+B,UAAnC;AACI,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWgC,KADtB;AAEI,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWiC,QAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKjC,KAAL,CAAWiC,QAAjC;AACI,MAAA,SAAS,EAAE,KAAKjC,KAAL,CAAWkC,SAD1B;AAEI,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWC,MAFvB;AAGI,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWmC,UAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAWH;;AAbuC;;AAgB5C,MAAMC,UAAN,SAAyB9C,KAAK,CAACK,SAA/B,CAAyC;AACrC0C,EAAAA,eAAe,CAACC,SAAD,EAAYC,gBAAZ,EAA8B;AACzC,UAAMC,OAAO,GAAGjB,KAAK,CAACkB,KAAN,CAAY,IAAZ,EAAkBlB,KAAK,CAACe,SAAD,CAAvB,EACXI,GADW,CACP,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACX,aAAOA,CAAC,GAAG,CAAX;AACH,KAHW,CAAhB;AAKA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQJ,OAAO,CAACE,GAAR,CAAaG,GAAD,IAAS;AACjB,aAAO;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKC,mBAAL,CAAyBD,GAAzB,EAA8B,KAA9B,CAA5B,CAAP;AACH,KAFD,CAFR,EAOQN,gBAAgB,CAACG,GAAjB,CAAsBK,MAAD,IAAY;AAC7B,aAAO;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BA,MAA5B,CAAP;AACH,KAFD,CAPR,CADJ;AAcH;;AAEDC,EAAAA,cAAc,CAACC,MAAD,EAASd,UAAT,EAAqB;AAC/B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQc,MAAM,CAACP,GAAP,CAAYG,GAAD,IAAS;AAChB,aAAO;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BA,GAA5B,CAAP;AACH,KAFD,CAFR,EAOQV,UAAU,CAACO,GAAX,CAAgBG,GAAD,IAAS;AACpB,UAAIA,GAAG,KAAK,SAAZ,EAAuB;AACnBA,QAAAA,GAAG,GAAGI,MAAM,CAACC,MAAP,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAGC,CAAhC,CAAN;AACH;;AAED,aAAO;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BP,GAA5B,CAAP;AACH,KAND,CAPR,CADJ;AAkBH;;AAEDC,EAAAA,mBAAmB,CAACO,GAAD,EAAMC,IAAN,EAAY;AAC3B,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAID,IAAJ,EAAU;AACNC,MAAAA,SAAS,IAAI,KAAKC,UAAL,CAAgBhE,SAAS,CAACiE,OAAV,CAAkB,KAAKzD,KAAL,CAAWC,MAA7B,EAAqCyD,EAArD,EAAyDL,GAAzD,CAAb;AACH,KAFD,MAEO,IAAI,KAAKrD,KAAL,CAAWiC,QAAf,EAAyB;AAC5BsB,MAAAA,SAAS,IAAI,KAAKC,UAAL,CAAgBhE,SAAS,CAACiE,OAAV,CAAkB,KAAKzD,KAAL,CAAWC,MAA7B,EAAqC0D,KAArD,EAA4DN,GAA5D,CAAb;AACH,KAFM,MAEA;AACHE,MAAAA,SAAS,IAAI,KAAKC,UAAL,CAAgBhE,SAAS,CAACiE,OAAV,CAAkB,KAAKzD,KAAL,CAAWC,MAA7B,EAAqC2D,MAArD,EAA6DP,GAA7D,CAAb;AACH;;AAED,WAAOE,SAAP;AACH;;AAEDC,EAAAA,UAAU,CAACK,GAAD,EAAMR,GAAN,EAAW;AACjB,QAAIQ,GAAG,CAACC,QAAJ,CAAa,OAAb,CAAJ,EAA2B;AACvB,aAAOD,GAAG,CAAC5C,OAAJ,CAAY,OAAZ,EAAqBoC,GAArB,CAAP;AACH,KAFD,MAEO;AACH,aAAOQ,GAAG,CAAC5C,OAAJ,CAAY,WAAZ,EAAyB,KAAK8C,oBAAL,CAA0BV,GAA1B,CAAzB,CAAP;AACH;AACJ;;AAEDU,EAAAA,oBAAoB,CAACC,CAAD,EAAI;AACpB,QAAIC,CAAC,GAAC,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,CAAN;AAAA,QACAb,CAAC,GAAEY,CAAC,GAAG,GADP;AAEA,WAAOA,CAAC,IAAIC,CAAC,CAAC,CAACb,CAAC,GAAC,EAAH,IAAO,EAAR,CAAD,IAAca,CAAC,CAACb,CAAD,CAAf,IAAoBa,CAAC,CAAC,CAAD,CAAzB,CAAR;AACF;;AAEFC,EAAAA,eAAe,GAAG;AACd,QAAIC,KAAK,GAAG,EAAZ;AACA,UAAMC,YAAY,GAAG,KAAKpE,KAAL,CAAWmC,UAAX,CAAsBO,GAAtB,CAA2BG,GAAD,IAAS;AACpD,aAAOwB,MAAM,CAACC,IAAP,CAAYzB,GAAZ,EAAiB,CAAjB,CAAP;AACH,KAFoB,CAArB;AAIAsB,IAAAA,KAAK,CAACxC,IAAN,CAAW,KAAKU,eAAL,CAAqB,KAAKrC,KAAL,CAAWkC,SAAX,CAAqBqC,IAArB,CAA0B9D,MAA/C,EAAuD2D,YAAvD,CAAX;AACAD,IAAAA,KAAK,CAACxC,IAAN,CAAW,KAAKqB,cAAL,CAAoB,KAAKhD,KAAL,CAAWkC,SAAX,CAAqBsC,IAAzC,EAA+CC,sBAAsB,CAAC,KAAKzE,KAAL,CAAWmC,UAAZ,EAAwB,MAAxB,CAArE,CAAX;AACAgC,IAAAA,KAAK,CAACxC,IAAN,CAAW,KAAKqB,cAAL,CAAoB,KAAKhD,KAAL,CAAWkC,SAAX,CAAqBqC,IAAzC,EAA+CE,sBAAsB,CAAC,KAAKzE,KAAL,CAAWmC,UAAZ,EAAwB,MAAxB,CAArE,CAAX;AAEA,WAAOgC,KAAP;AACH;;AAED9C,EAAAA,MAAM,GAAG;AACL,UAAMqD,SAAS,GAAG,KAAKR,eAAL,EAAlB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKQ,SADL,CADJ,CADJ,CADJ;AASH;;AAjGoC;;AAoGzC,MAAMC,UAAN,SAAyBrF,KAAK,CAACK,SAA/B,CAAyC;AACrC0B,EAAAA,MAAM,GAAG;AACL,QAAIuD,SAAS,GAAG,EAAhB;;AAEA,QAAI,KAAK5E,KAAL,CAAWiC,QAAf,EAAyB;AACrB2C,MAAAA,SAAS,IAAI,MAAb;AACH,KAFD,MAEO;AACHA,MAAAA,SAAS,IAAI,MAAb;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKnF,KAAK,CAACW,gBAAN,CAAuB,KAAKJ,KAAL,CAAW+B,UAAlC,CADL,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK/B,KAAL,CAAWgC,KAAX,CAAiBwC,IAAjB,CAAsBI,SAAtB,CADL,CADJ,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK5E,KAAL,CAAWgC,KAAX,CAAiBuC,IAAjB,CAAsBK,SAAtB,CADL,CADJ,CAXJ,CADJ,CADJ,CADJ;AAuBH;;AAjCoC;;AAoCzC,MAAMC,QAAN,SAAuBvF,KAAK,CAACK,SAA7B,CAAuC;AACnCmF,EAAAA,WAAW,CAAC9E,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAK+E,KAAL,GAAa;AACThD,MAAAA,UAAU,EAAE,EADH;AAET9B,MAAAA,MAAM,EAAE,EAFC;AAGT+E,MAAAA,SAAS,EAAE;AAACR,QAAAA,IAAI,EAAE,EAAP;AAAWD,QAAAA,IAAI,EAAE;AAAjB,OAHF;AAIT9C,MAAAA,UAAU,EAAE,EAJH;AAKTO,MAAAA,KAAK,EAAE;AAACwC,QAAAA,IAAI,EAAE,EAAP;AAAWD,QAAAA,IAAI,EAAE;AAAjB,OALE;AAMTtC,MAAAA,QAAQ,EAAE,KAND;AAOTE,MAAAA,UAAU,EAAE;AAPH,KAAb;AASH;;AAED8C,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC,MAAM;AACvC,WAAKC,eAAL;AACH,KAFD;AAGH;;AAEDA,EAAAA,eAAe,GAAG;AACd,QAAIC,KAAK,GAAGH,MAAM,CAACI,UAAnB;;AAEA,QAAKD,KAAK,GAAG,IAAR,IAAgB,CAAC,KAAKN,KAAL,CAAW9C,QAA7B,IAA2CoD,KAAK,IAAI,IAAT,IAAiB,KAAKN,KAAL,CAAW9C,QAA3E,EAAsF;AAClF,WAAKsD,eAAL;AACH;AACJ;;AAEDA,EAAAA,eAAe,GAAG;AACd,UAAMC,QAAQ,GAAG,KAAKT,KAAtB;AACAS,IAAAA,QAAQ,CAACvD,QAAT,GAAoB,CAAC,KAAK8C,KAAL,CAAW9C,QAAhC;AAEA,SAAKwD,QAAL,CAAcD,QAAd;AACH;;AAED,QAAME,WAAN,CAAkBC,UAAlB,EAA8B;AAC1B,UAAMC,QAAQ,GAAG,MAAMnG,KAAK,CAACoG,kBAAN,CAAyBF,UAAzB,CAAvB;AACA,UAAMzD,SAAS,GAAG,MAAMzC,KAAK,CAACqG,YAAN,CAAmBH,UAAnB,CAAxB;AACA,UAAMI,QAAQ,GAAG,MAAMtG,KAAK,CAACuG,WAAN,CAAkBL,UAAlB,CAAvB;AACA,UAAMlE,UAAU,GAAG,MAAMhC,KAAK,CAACwG,aAAN,CAAoBN,UAApB,CAAzB;AACA,UAAMxD,UAAU,GAAG,MAAM1C,KAAK,CAACyG,aAAN,CAAoBP,UAApB,CAAzB;AACA,QAAIQ,QAAQ,GAAG;AACXlG,MAAAA,MAAM,EAAE0F;AADG,KAAf;AAIAQ,IAAAA,QAAQ,CAACpE,UAAT,GAAsB6D,QAAQ,CAACQ,MAA/B;AACAD,IAAAA,QAAQ,CAACE,QAAT,GAAoBT,QAAQ,CAACS,QAA7B;AACAF,IAAAA,QAAQ,CAACnB,SAAT,GAAqB9C,SAArB;AACAiE,IAAAA,QAAQ,CAACnE,KAAT,GAAiB+D,QAAjB;AACAI,IAAAA,QAAQ,CAAC1E,UAAT,GAAsBA,UAAtB;AACA0E,IAAAA,QAAQ,CAAChE,UAAT,GAAsBA,UAAtB;AAEA,WAAOgE,QAAP;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,WAAL,CAAiB,KAAjB,EACKa,IADL,CACWf,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAcD,QAAd;AACH,KAHL;AAKAN,IAAAA,MAAM,CAACsB,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,WAAKpB,eAAL;AACH,KAFD;AAGH;;AAED/D,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAAK0D,KAAL,CAAWhD,UAAtC;AACe,MAAA,SAAS,EAAE,KAAKgD,KAAL,CAAWC,SADrC;AAEe,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAW/C,KAFjC;AAGe,MAAA,QAAQ,EAAE,KAAK+C,KAAL,CAAW9C,QAHpC;AAIe,MAAA,MAAM,EAAE,KAAK8C,KAAL,CAAW9E,MAJlC;AAKe,MAAA,UAAU,EAAE,KAAK8E,KAAL,CAAW5C,UALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,KAAK4C,KAAL,CAAWtD,UAAxC;AACiB,MAAA,MAAM,EAAE,KAAKsD,KAAL,CAAW9E,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAYH;;AA/EkC;;AAkFvCV,QAAQ,CAAC8B,MAAT,CACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIoF,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAKA;;AAEA,SAASjC,sBAAT,CAAgCkC,GAAhC,EAAqCC,QAArC,EAA+C;AAC3C,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,MAAMC,GAAX,IAAkBH,GAAlB,EAAuB;AACnB,QAAI/E,GAAG,GAAGyC,MAAM,CAACC,IAAP,CAAYwC,GAAZ,EAAiB,CAAjB,CAAV;AAEAD,IAAAA,SAAS,CAAClF,IAAV,CAAemF,GAAG,CAAClF,GAAD,CAAH,CAASgF,QAAT,CAAf;AACH;;AAED,SAAOC,SAAP;AACH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as constants from './constants.js'\nimport * as utils from './utils.js'\n\nclass PlayerContainer extends React.Component {\n    constructStatPlayer(playerObj) {\n        const stat = constants.playerStats[this.props.league].searchBy\n        let playerPerformance = '';\n        playerPerformance += `${utils.capitalizeString(stat)}: ${playerObj[stat]}`;\n\n        return (\n            <div className=\"player-card\">\n                <div className=\"stats\">\n                    <div className=\"player-divider\">\n                        {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                    </div>\n                    <div className=\"player-divider\">\n                        {playerPerformance}\n                    </div>\n                    {\n                        constants.playerStats[this.props.league].alsoShow.length > 0 &&\n                        <div className=\"player-divider\">\n                            {this.createPlayerStats(playerObj, constants.playerStats[this.props.league].alsoShow)}\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    constructCategoryPlayer(category, playerObj) {\n        const alsoShow = constants.playerStats[this.props.league].alsoShow;\n\n        if (alsoShow.length > 0) {\n            return (\n                <div className=\"player-card\">\n                    <div className=\"stats\">\n                        <div className=\"player-divider\">\n                            {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                        </div>\n                        <div className=\"player-divider\">\n                            {category.toUpperCase()}\n                        </div>\n                        <div className=\"player-divider\">\n                            {this.createPlayerStats(playerObj, alsoShow)}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"player-card\">\n                    <div className=\"stats\">\n                        <div className=\"player-divider\">\n                            {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                        </div>\n                        <div className=\"player-divider\">\n                            {category.toUpperCase()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    createPlayerStats(playerObj, stats) {\n        let returnMsg = '';\n\n        stats.forEach((stat) => {\n            if (playerObj[stat]) {\n                returnMsg += `${stat.toUpperCase().replace(/_/g, ' ')}: ${playerObj[stat]}, `;\n            }\n        });\n\n        if (returnMsg.length > 0) {\n            returnMsg = returnMsg.slice(0, -2);\n        }\n\n        return returnMsg;\n    }\n\n    createPlayerName (name, team) {\n        return `${name} (${team})`;\n    }\n\n    render() {\n        let players = [];\n\n        if (Array.isArray(this.props.playerInfo)) {\n            this.props.playerInfo.forEach((player) => {\n                players.push(this.constructStatPlayer(player));\n            });\n        } else {\n            for (let key in this.props.playerInfo) {\n                if (this.props.playerInfo.hasOwnProperty(key)) {\n                    players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key]));\n                }\n            }\n        }\n\n        return (\n            <div className=\"player-container\">\n                <div className=\"players\">\n                    {players}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GameContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"game-container\">\n                <TeamColumn gameStatus={this.props.gameStatus}\n                    teams={this.props.teams}\n                    useSmall={this.props.useSmall} />\n                <ScoreTable useSmall={this.props.useSmall}\n                    gameScore={this.props.gameScore}\n                    league={this.props.league}\n                    extraStats={this.props.extraStats} />\n            </div>\n        );\n    }\n}\n\nclass ScoreTable extends React.Component {\n    createHeaderRow(periodLen, extraStatHeaders) {\n        const tempArr = Array.apply(null, Array(periodLen))\n            .map((x, i) => { \n                return i + 1;\n            });\n\n        return (\n            <tr>\n                {\n                    tempArr.map((val) => {\n                        return <td className=\"score-cell\">{this.generateHeaderLabel(val, false)}</td>;\n                    })\n                }\n                {\n                    extraStatHeaders.map((header) => {\n                        return <td className=\"score-cell\">{header}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    createScoreRow(scores, extraStats) {\n        return (\n            <tr>\n                {\n                    scores.map((val) => {\n                        return <td className=\"score-cell\">{val}</td>\n                    })\n                }\n                {\n                    extraStats.map((val) => {\n                        if (val === '<TOTAL>') {\n                            val = scores.reduce((acc, v) => acc + v);\n                        }\n\n                        return <td className=\"score-cell\">{val}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    generateHeaderLabel(idx, isOT) {\n        let returnStr = '';\n\n        if (isOT) {\n            returnStr += this.numReplace(constants.periods[this.props.league].OT, idx);\n        } else if (this.props.useSmall) {\n            returnStr += this.numReplace(constants.periods[this.props.league].small, idx);\n        } else {\n            returnStr += this.numReplace(constants.periods[this.props.league].normal, idx);\n        }\n\n        return returnStr;\n    }\n\n    numReplace(str, idx) {\n        if (str.includes('<NUM>')) {\n            return str.replace('<NUM>', idx);\n        } else {\n            return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n        }\n    }\n\n    getNumberWithOrdinal(n) {\n        let s=[\"th\",\"st\",\"nd\",\"rd\"],\n        v= n % 100;\n        return n + (s[(v-20)%10]||s[v]||s[0]);\n     }\n\n    createTableData() {\n        let table = [];\n        const extraHeaders = this.props.extraStats.map((val) => {\n            return Object.keys(val)[0];\n        });\n\n        table.push(this.createHeaderRow(this.props.gameScore.home.length, extraHeaders));\n        table.push(this.createScoreRow(this.props.gameScore.away, generateTeamStatsArray(this.props.extraStats, 'away')));\n        table.push(this.createScoreRow(this.props.gameScore.home, generateTeamStatsArray(this.props.extraStats, 'home')));\n\n        return table;\n    }\n\n    render() {\n        const tableData = this.createTableData();\n\n        return (\n            <div className=\"game-score\">\n                <table>\n                    <tbody>\n                        {tableData}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass TeamColumn extends React.Component {\n    render() {\n        let propToUse = '';\n\n        if (this.props.useSmall) {\n            propToUse += 'abbv';\n        } else {\n            propToUse += 'name';\n        }\n\n        return (\n            <div className=\"teams-container\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {utils.capitalizeString(this.props.gameStatus)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.away[propToUse]}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.home[propToUse]}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass Boxscore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameStatus: '',\n            league: '',\n            scoreInfo: {away: [], home: []},\n            playerInfo: {},\n            teams: {away: '', home: ''},\n            useSmall: false,\n            extraStats: []\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', () => {\n            this.checkWindowSize()\n        });\n    }\n\n    checkWindowSize() {\n        let width = window.innerWidth;\n\n        if ((width < 1150 && !this.state.useSmall) || (width >= 1150 && this.state.useSmall)) {\n            this.updateSizeState();\n        }\n    }\n\n    updateSizeState() {\n        const newState = this.state;\n        newState.useSmall = !this.state.useSmall;\n\n        this.setState(newState);\n    }\n\n    async getGameInfo(leagueType) {\n        const gameInfo = await utils.getGameInformation(leagueType);\n        const gameScore = await utils.getGameScore(leagueType);\n        const teamInfo = await utils.getTeamInfo(leagueType);\n        const playerInfo = await utils.getPlayerInfo(leagueType);\n        const extraStats = await utils.getExtraStats(leagueType);\n        let stateObj = {\n            league: leagueType\n        };\n\n        stateObj.gameStatus = gameInfo.status;\n        stateObj.location = gameInfo.location;\n        stateObj.scoreInfo = gameScore;\n        stateObj.teams = teamInfo;\n        stateObj.playerInfo = playerInfo;\n        stateObj.extraStats = extraStats;\n        \n        return stateObj;\n    }\n\n    componentDidMount() {\n        this.getGameInfo('MLB')\n            .then((newState) => {\n                this.setState(newState);\n            });\n\n        window.addEventListener('resize', () => {\n            this.checkWindowSize();\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"boxscore-container\">\n                <GameContainer gameStatus={this.state.gameStatus}\n                               gameScore={this.state.scoreInfo}\n                               teams={this.state.teams}\n                               useSmall={this.state.useSmall}\n                               league={this.state.league}\n                               extraStats={this.state.extraStats}/>\n                <PlayerContainer playerInfo={this.state.playerInfo}\n                                 league={this.state.league} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Boxscore />,\n    document.getElementById('root')\n);\n\n/* ========== HELPER FUNCTIONS ========== */\n\nfunction generateTeamStatsArray(arr, teamType) {\n    let returnArr = [];\n\n    for (const obj of arr) {\n        let key = Object.keys(obj)[0];\n\n        returnArr.push(obj[key][teamType]);\n    }\n\n    return returnArr;\n}"]},"metadata":{},"sourceType":"module"}