{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\barstool\\\\boxscore-widget\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst periods = {\n  MLB: {\n    normal: '<CARDNUM> Inning',\n    small: '<NUM>',\n    OT: '<NUM>',\n    extras: [{\n      'R': ''\n    }, {\n      'H': ''\n    }, {\n      'E': ''\n    }]\n  },\n  NBA: {\n    normal: '<CARDNUM> Quarter',\n    small: 'Q<NUM>',\n    OT: 'OT<NUM>',\n    extras: [{\n      'T': '<TOTAL>'\n    }]\n  }\n};\nconst totalRequirements = {\n  MLB: false,\n  NBA: true\n};\n\nclass PlayerContainer extends React.Component {\n  constructStatPlayer(playerObj, stat) {\n    let playerPerformance = '';\n    playerPerformance += \"\".concat(stat.charAt(0).toUpperCase() + stat.slice(1), \": \").concat(playerObj[stat]);\n    return React.createElement(\"div\", {\n      className: \"player-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, playerPerformance)));\n  }\n\n  constructCategoryPlayer(category, playerObj, stats) {\n    if (stats) {\n      const statsToShow = this.createPlayerStats(playerObj, stats);\n\n      if (statsToShow.length > 0) {\n        return React.createElement(\"div\", {\n          className: \"player-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"stats\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"player-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n          className: \"player-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, category.toUpperCase()), React.createElement(\"div\", {\n          className: \"player-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, statsToShow)));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        className: \"player-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, category.toUpperCase())));\n    }\n  }\n\n  createPlayerStats(playerObj, stats) {\n    let returnMsg = '';\n    stats.forEach(stat => {\n      if (playerObj[stat]) {\n        returnMsg += \"\".concat(stat.toUpperCase().replace(/_/g, ' '), \": \").concat(playerObj[stat], \", \");\n      }\n    });\n\n    if (returnMsg.length > 0) {\n      returnMsg = returnMsg.slice(0, -2);\n    }\n\n    return returnMsg;\n  }\n\n  createPlayerName(name, team) {\n    return \"\".concat(name, \" (\").concat(team, \")\");\n  }\n\n  render() {\n    let players = [];\n\n    if (Array.isArray(this.props.playerInfo)) {\n      this.props.playerInfo.forEach(player => {\n        players.push(this.constructStatPlayer(player, this.props.stat));\n      });\n    } else {\n      const stats = ['innings_pitched', 'earned_runs', 'strike_outs', 'era'];\n\n      for (let key in this.props.playerInfo) {\n        if (this.props.playerInfo.hasOwnProperty(key)) {\n          players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key], stats));\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, players));\n  }\n\n}\n\nclass GameContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(TeamColumn, {\n      gameStatus: this.props.gameStatus,\n      teams: this.props.teams,\n      useSmall: this.props.useSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(ScoreTable, {\n      useSmall: this.props.useSmall,\n      gameScore: this.props.gameScore,\n      league: this.props.league,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ScoreTable extends React.Component {\n  createHeaderRow(periodLen) {\n    const tempArr = Array.apply(null, Array(periodLen)).map((x, i) => {\n      return i + 1;\n    });\n    const extraHeaders = periods[this.props.league] ? periods[this.props.league].extras : [];\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, tempArr.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.generateHeaderLabel(val, false));\n    }), extraHeaders.map(obj => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, Object.keys(obj));\n    }));\n  }\n\n  createScoreRow(scores) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, scores.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, val);\n    }));\n  }\n\n  generateHeaderLabel(idx, isOT) {\n    let returnStr = '';\n\n    if (isOT) {\n      returnStr += this.numReplace(periods[this.props.league].OT, idx);\n    } else if (this.props.useSmall) {\n      returnStr += this.numReplace(periods[this.props.league].small, idx);\n    } else {\n      returnStr += this.numReplace(periods[this.props.league].normal, idx);\n    }\n\n    return returnStr;\n  }\n\n  numReplace(str, idx) {\n    if (str.includes('<NUM>')) {\n      return str.replace('<NUM>', idx);\n    } else {\n      return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n    }\n  }\n\n  getNumberWithOrdinal(n) {\n    let s = [\"th\", \"st\", \"nd\", \"rd\"],\n        v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  }\n\n  createTableData() {\n    let table = [];\n    table.push(this.createHeaderRow(this.props.gameScore.home.length));\n    table.push(this.createScoreRow(this.props.gameScore.away));\n    table.push(this.createScoreRow(this.props.gameScore.home));\n    return table;\n  }\n\n  render() {\n    const tableData = this.createTableData();\n    return React.createElement(\"div\", {\n      className: \"game-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, tableData)));\n  }\n\n}\n\nclass TeamColumn extends React.Component {\n  render() {\n    let propToUse = '';\n\n    if (this.props.useSmall) {\n      propToUse += 'abbv';\n    } else {\n      propToUse += 'name';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"teams-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Game Status: \", this.props.gameStatus)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.props.teams.away[propToUse])), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.props.teams.home[propToUse])))));\n  }\n\n}\n\nclass Boxscore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: '',\n      league: '',\n      scoreInfo: {\n        away: [],\n        home: []\n      },\n      playerInfo: {},\n      teams: {\n        away: '',\n        home: ''\n      },\n      useSmall: false\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  checkWindowSize() {\n    let width = window.innerWidth;\n\n    if (width < 1150 && !this.state.useSmall || width >= 1150 && this.state.useSmall) {\n      this.updateSizeState();\n    }\n  }\n\n  updateSizeState() {\n    const newState = this.state;\n    newState.useSmall = !this.state.useSmall;\n    this.setState(newState);\n  }\n\n  async getGameInfo(leagueType) {\n    const gameInfo = await getGameInfo(leagueType);\n    const gameScore = await getGameScore(leagueType);\n    const teamInfo = await getTeamInfo(leagueType);\n    const playerInfo = await getPlayerInfo(leagueType);\n    let stateObj = {\n      league: leagueType\n    };\n    stateObj.gameStatus = gameInfo.status;\n    stateObj.location = gameInfo.location;\n    stateObj.scoreInfo = gameScore;\n    stateObj.teams = teamInfo;\n    stateObj.playerInfo = playerInfo;\n    return stateObj;\n  }\n\n  componentDidMount() {\n    this.getGameInfo('NBA').then(newState => {\n      this.setState(newState);\n    });\n    window.addEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  render() {\n    const stat = 'points';\n    return React.createElement(\"div\", {\n      className: \"boxscore-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      gameStatus: this.state.gameStatus,\n      gameScore: this.state.scoreInfo,\n      teams: this.state.teams,\n      useSmall: this.state.useSmall,\n      league: this.state.league,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(PlayerContainer, {\n      playerInfo: this.state.playerInfo,\n      stat: stat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Boxscore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 364\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ========== HELPER FUNCTIONS ========== */\n\nasync function getGameInfo(leagueType) {\n  const apiEndpoint = apiURLConstructor(leagueType, 'event_information');\n  const eventData = await fetchUrlData(apiEndpoint);\n  const returnObj = {\n    status: eventData.status,\n    location: constructLocObj(eventData.site)\n  };\n  return returnObj;\n}\n\nasync function getGameScore(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: homeData,\n    away: awayData\n  };\n  return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: constructTeamObj(homeData),\n    away: constructTeamObj(awayData)\n  };\n  return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n  const playerStatCategories = getLeagueStatCategory(leagueType);\n  const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n  const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n  const homePlayerData = await fetchUrlData(homeEndpoint);\n  const awayPlayerData = await fetchUrlData(awayEndpoint);\n  const playerDataObj = {\n    home: homePlayerData,\n    away: awayPlayerData\n  };\n  const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n  return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n  const keyStats = {\n    NBA: 'points',\n    MLB: ['win', 'loss', 'save']\n  };\n\n  if (!Array.isArray(keyStats[leagueType])) {\n    const stat = keyStats[leagueType];\n    const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n    return rankedPlayers;\n  } else {\n    const statsToFind = keyStats[leagueType];\n    const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n    return players;\n  }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n  const totalPlayers = arr1.concat(arr2);\n  let returnObj = {};\n\n  for (let entry of totalPlayers) {\n    if (entry[statsArr[0]]) {\n      returnObj[statsArr[0]] = entry;\n    } else if (entry[statsArr[1]]) {\n      returnObj[statsArr[1]] = entry;\n    } else if (entry[statsArr[2]]) {\n      returnObj[statsArr[2]] = entry;\n    } // Max amount we can give back\n\n\n    if (Object.keys(returnObj).length === 3) {\n      break;\n    }\n  }\n\n  return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n  const totalPlayers = arr1.concat(arr2);\n  return totalPlayers.sort((a, b) => statComparison(a, b, stat)).slice().filter((val, i) => {\n    return i < n;\n  });\n}\n\nfunction statComparison(a, b, stat) {\n  if (b[stat] > a[stat]) {\n    return 1;\n  } else if (a[stat] > b[stat]) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n  if (leagueType === 'NBA') {\n    return ['home_stats', 'away_stats'];\n  } else {\n    return ['home_pitchers', 'away_pitchers'];\n  }\n}\n\nfunction constructTeamObj(obj) {\n  return {\n    name: obj.full_name,\n    abbv: obj.abbreviation\n  };\n}\n\nfunction constructLocObj(obj) {\n  return {\n    name: \"\".concat(obj.city, \", \").concat(obj.state),\n    stadium: obj.name\n  };\n}\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\n\n\nfunction fetchUrlData(url) {\n  return new Promise((res, rej) => {\n    // Get our endpoint data\n    fetch(url).then(resp => {\n      // If it came back propertly, return it\n      if (resp.status === 200) {\n        res(resp.json()); // Otherwise send the error\n      } else {\n        rej(resp.statusText);\n      }\n    }).catch(err => {\n      rej(err);\n    });\n  });\n}\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\n\n\nfunction apiURLConstructor(league, typeOfStat) {\n  let baseURL = '/api/games';\n\n  if (league) {\n    baseURL += \"/\".concat(league.toUpperCase());\n  }\n\n  if (typeOfStat) {\n    baseURL += \"?stats=\".concat(typeOfStat);\n  }\n\n  return baseURL;\n}","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\index.js"],"names":["React","ReactDOM","periods","MLB","normal","small","OT","extras","NBA","totalRequirements","PlayerContainer","Component","constructStatPlayer","playerObj","stat","playerPerformance","charAt","toUpperCase","slice","createPlayerName","display_name","team_abbreviation","constructCategoryPlayer","category","stats","statsToShow","createPlayerStats","length","returnMsg","forEach","replace","name","team","render","players","Array","isArray","props","playerInfo","player","push","key","hasOwnProperty","GameContainer","gameStatus","teams","useSmall","gameScore","league","ScoreTable","createHeaderRow","periodLen","tempArr","apply","map","x","i","extraHeaders","val","generateHeaderLabel","obj","Object","keys","createScoreRow","scores","idx","isOT","returnStr","numReplace","str","includes","getNumberWithOrdinal","n","s","v","createTableData","table","home","away","tableData","TeamColumn","propToUse","Boxscore","constructor","state","scoreInfo","componentWillUnmount","window","removeEventListener","checkWindowSize","width","innerWidth","updateSizeState","newState","setState","getGameInfo","leagueType","gameInfo","getGameScore","teamInfo","getTeamInfo","getPlayerInfo","stateObj","status","location","componentDidMount","then","addEventListener","document","getElementById","apiEndpoint","apiURLConstructor","eventData","fetchUrlData","returnObj","constructLocObj","site","homeEndpoint","awayEndpoint","homeData","awayData","constructTeamObj","playerStatCategories","getLeagueStatCategory","homePlayerData","awayPlayerData","playerDataObj","finalPlayerObj","createPlayerDataObj","keyStats","rankedPlayers","getNHighestTotals","statsToFind","findPlayerStats","statsArr","arr1","arr2","totalPlayers","concat","entry","sort","a","b","statComparison","filter","full_name","abbv","abbreviation","city","stadium","url","Promise","res","rej","fetch","resp","json","statusText","catch","err","typeOfStat","baseURL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst periods = {\n    MLB: {\n        normal: '<CARDNUM> Inning',\n        small: '<NUM>',\n        OT: '<NUM>',\n        extras: [\n            {\n                'R': ''\n            },\n            {\n                'H': ''\n            },\n            {\n                'E': ''\n            }\n        ]\n    },\n    NBA: {\n        normal: '<CARDNUM> Quarter',\n        small: 'Q<NUM>',\n        OT: 'OT<NUM>',\n        extras: [\n            {\n                'T': '<TOTAL>'\n            }\n        ]\n    }\n}\n\nconst totalRequirements = {\n    MLB: false,\n    NBA: true\n}\n\nclass PlayerContainer extends React.Component {\n    constructStatPlayer(playerObj, stat) {\n        let playerPerformance = '';\n        playerPerformance += `${stat.charAt(0).toUpperCase() + stat.slice(1)}: ${playerObj[stat]}`;\n\n        return (\n            <div className=\"player-card\">\n                <div className=\"stats\">\n                    <div className=\"player-divider\">\n                        {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                    </div>\n                    <div className=\"player-divider\">\n                        {playerPerformance}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    constructCategoryPlayer(category, playerObj, stats) {\n        if (stats) {\n            const statsToShow = this.createPlayerStats(playerObj, stats);\n\n            if (statsToShow.length > 0) {\n                return (\n                    <div className=\"player-card\">\n                        <div className=\"stats\">\n                            <div className=\"player-divider\">\n                                {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                            </div>\n                            <div className=\"player-divider\">\n                                {category.toUpperCase()}\n                            </div>\n                            <div className=\"player-divider\">\n                                {statsToShow}\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <div className=\"player-card\">\n                    <div className=\"stats\">\n                        <div className=\"player-divider\">\n                            {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                        </div>\n                        <div className=\"player-divider\">\n                            {category.toUpperCase()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    createPlayerStats(playerObj, stats) {\n        let returnMsg = '';\n\n        stats.forEach((stat) => {\n            if (playerObj[stat]) {\n                returnMsg += `${stat.toUpperCase().replace(/_/g, ' ')}: ${playerObj[stat]}, `;\n            }\n        });\n\n        if (returnMsg.length > 0) {\n            returnMsg = returnMsg.slice(0, -2);\n        }\n\n        return returnMsg;\n    }\n\n    createPlayerName (name, team) {\n        return `${name} (${team})`;\n    }\n\n    render() {\n        let players = [];\n\n        if (Array.isArray(this.props.playerInfo)) {\n            this.props.playerInfo.forEach((player) => {\n                players.push(this.constructStatPlayer(player, this.props.stat));\n            });\n        } else {\n            const stats = ['innings_pitched', 'earned_runs', 'strike_outs', 'era'];\n\n            for (let key in this.props.playerInfo) {\n                if (this.props.playerInfo.hasOwnProperty(key)) {\n                    players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key], stats));\n                }\n            }\n        }\n\n        return (\n            <div className=\"player-container\">\n                <div className=\"players\">\n                    {players}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GameContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"game-container\">\n                <TeamColumn gameStatus={this.props.gameStatus}\n                    teams={this.props.teams}\n                    useSmall={this.props.useSmall} />\n                <ScoreTable useSmall={this.props.useSmall}\n                    gameScore={this.props.gameScore}\n                    league={this.props.league} />\n            </div>\n        );\n    }\n}\n\nclass ScoreTable extends React.Component {\n    createHeaderRow(periodLen) {\n        const tempArr = Array.apply(null, Array(periodLen))\n            .map((x, i) => { \n                return i + 1;\n            });\n\n        const extraHeaders = periods[this.props.league] ? periods[this.props.league].extras : [];\n\n        return (\n            <tr>\n                {\n                    tempArr.map((val) => {\n                        return <td className=\"score-cell\">{this.generateHeaderLabel(val, false)}</td>;\n                    })\n                }\n                {\n                    extraHeaders.map((obj) => {\n                        return <td className=\"score-cell\">{Object.keys(obj)}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    createScoreRow(scores) {\n        return (\n            <tr>\n                {\n                    scores.map((val) => {\n                        return <td className=\"score-cell\">{val}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    generateHeaderLabel(idx, isOT) {\n        let returnStr = '';\n\n        if (isOT) {\n            returnStr += this.numReplace(periods[this.props.league].OT, idx);\n        } else if (this.props.useSmall) {\n            returnStr += this.numReplace(periods[this.props.league].small, idx);\n        } else {\n            returnStr += this.numReplace(periods[this.props.league].normal, idx);\n        }\n\n        return returnStr;\n    }\n\n    numReplace(str, idx) {\n        if (str.includes('<NUM>')) {\n            return str.replace('<NUM>', idx);\n        } else {\n            return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n        }\n    }\n\n    getNumberWithOrdinal(n) {\n        let s=[\"th\",\"st\",\"nd\",\"rd\"],\n        v= n % 100;\n        return n + (s[(v-20)%10]||s[v]||s[0]);\n     }\n\n    createTableData() {\n        let table = [];\n\n        table.push(this.createHeaderRow(this.props.gameScore.home.length));\n        table.push(this.createScoreRow(this.props.gameScore.away));\n        table.push(this.createScoreRow(this.props.gameScore.home));\n\n        return table;\n    }\n\n    render() {\n        const tableData = this.createTableData();\n\n        return (\n            <div className=\"game-score\">\n                <table>\n                    <tbody>\n                        {tableData}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass TeamColumn extends React.Component {\n    render() {\n        let propToUse = '';\n\n        if (this.props.useSmall) {\n            propToUse += 'abbv';\n        } else {\n            propToUse += 'name';\n        }\n\n        return (\n            <div className=\"teams-container\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                Game Status: {this.props.gameStatus}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.away[propToUse]}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.home[propToUse]}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass Boxscore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameStatus: '',\n            league: '',\n            scoreInfo: {away: [], home: []},\n            playerInfo: {},\n            teams: {away: '', home: ''},\n            useSmall: false\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', () => {\n            this.checkWindowSize()\n        });\n    }\n\n    checkWindowSize() {\n        let width = window.innerWidth;\n\n        if ((width < 1150 && !this.state.useSmall) || (width >= 1150 && this.state.useSmall)) {\n            this.updateSizeState();\n        }\n    }\n\n    updateSizeState() {\n        const newState = this.state;\n        newState.useSmall = !this.state.useSmall;\n\n        this.setState(newState);\n    }\n\n    async getGameInfo(leagueType) {\n        const gameInfo = await getGameInfo(leagueType);\n        const gameScore = await getGameScore(leagueType);\n        const teamInfo = await getTeamInfo(leagueType);\n        const playerInfo = await getPlayerInfo(leagueType);\n        let stateObj = {\n            league: leagueType\n        };\n\n        stateObj.gameStatus = gameInfo.status;\n        stateObj.location = gameInfo.location;\n        stateObj.scoreInfo = gameScore;\n        stateObj.teams = teamInfo;\n        stateObj.playerInfo = playerInfo;\n        \n        return stateObj;\n    }\n\n    componentDidMount() {\n        this.getGameInfo('NBA')\n            .then((newState) => {\n                this.setState(newState);\n            });\n\n        window.addEventListener('resize', () => {\n            this.checkWindowSize();\n        });\n    }\n\n    render() {\n        const stat = 'points';\n\n        return (\n            <div className=\"boxscore-container\">\n                <GameContainer gameStatus={this.state.gameStatus}\n                               gameScore={this.state.scoreInfo}\n                               teams={this.state.teams}\n                               useSmall={this.state.useSmall}\n                               league={this.state.league}/>\n                <PlayerContainer playerInfo={this.state.playerInfo}\n                                 stat={stat}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Boxscore />,\n    document.getElementById('root')\n);\n\n/* ========== HELPER FUNCTIONS ========== */\n\nasync function getGameInfo(leagueType) {\n    const apiEndpoint = apiURLConstructor(leagueType, 'event_information')\n    const eventData = await fetchUrlData(apiEndpoint);\n    const returnObj = {\n        status: eventData.status,\n        location: constructLocObj(eventData.site)\n    };\n\n    return returnObj\n}\n\nasync function getGameScore(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: homeData,\n        away: awayData\n    }\n\n    return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: constructTeamObj(homeData),\n        away: constructTeamObj(awayData)\n    }\n\n    return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n    const playerStatCategories = getLeagueStatCategory(leagueType);\n    const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n    const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n    const homePlayerData = await fetchUrlData(homeEndpoint);\n    const awayPlayerData = await fetchUrlData(awayEndpoint);\n    const playerDataObj = {\n        home: homePlayerData,\n        away: awayPlayerData\n    };\n    const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n\n    return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n    const keyStats = {\n        NBA: 'points',\n        MLB: ['win', 'loss', 'save']\n    }\n\n    if (!Array.isArray(keyStats[leagueType])) {\n        const stat = keyStats[leagueType];\n        const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n        \n        return rankedPlayers\n    } else {\n        const statsToFind = keyStats[leagueType];\n        const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n\n        return players;\n    }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n    const totalPlayers = arr1.concat(arr2);\n    let returnObj = {};\n\n    for (let entry of totalPlayers) {\n        if (entry[statsArr[0]]) {\n            returnObj[statsArr[0]] = entry;\n        } else if (entry[statsArr[1]]) {\n            returnObj[statsArr[1]] = entry;\n        } else if (entry[statsArr[2]]) {\n            returnObj[statsArr[2]] = entry;\n        }\n\n        // Max amount we can give back\n        if (Object.keys(returnObj).length === 3) {\n            break;\n        }\n    }\n\n    return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n    const totalPlayers = arr1.concat(arr2);\n\n    return totalPlayers\n        .sort((a, b) => statComparison(a, b, stat))\n        .slice()\n        .filter((val, i) => {\n            return i < n;\n        });\n}\n\nfunction statComparison(a, b, stat) {\n    if (b[stat] > a[stat]) {\n        return 1;\n    } else if (a[stat] > b[stat]) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n    if (leagueType === 'NBA') {\n        return ['home_stats', 'away_stats'];\n    } else {\n        return ['home_pitchers', 'away_pitchers']\n    }\n}\n\nfunction constructTeamObj(obj) {\n    return {\n        name: obj.full_name,\n        abbv: obj.abbreviation\n    };\n}\n\nfunction constructLocObj(obj) {\n    return {\n        name: `${obj.city}, ${obj.state}`,\n        stadium: obj.name\n    };\n}\n\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\nfunction fetchUrlData(url) {\n    return new Promise((res, rej) => {\n        // Get our endpoint data\n        fetch(url)\n            .then((resp) => {\n                // If it came back propertly, return it\n                if (resp.status === 200) {\n                    res(resp.json());\n                // Otherwise send the error\n                } else {\n                    rej(resp.statusText);\n                }\n            })\n            .catch((err) => {\n                rej(err);\n            });\n    });\n}\n\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\nfunction apiURLConstructor(league, typeOfStat) {\n    let baseURL = '/api/games';\n\n    if (league) {\n        baseURL += `/${league.toUpperCase()}`;\n    }\n\n    if (typeOfStat) {\n        baseURL += `?stats=${typeOfStat}`;\n    }\n\n    return baseURL;\n}"]},"metadata":{},"sourceType":"module"}