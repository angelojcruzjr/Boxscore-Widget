{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\barstool\\\\boxscore-widget\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst periods = {\n  MLB: {\n    normal: '<CARDNUM> Inning',\n    small: '<NUM>',\n    OT: '<NUM>',\n    extras: [{\n      'R': {\n        awayStat: 'away_batter_totals',\n        awaySubStat: 'runs',\n        homeStat: 'home_batter_totals',\n        homeSubStat: 'runs'\n      }\n    }, {\n      'H': {\n        awayStat: 'away_batter_totals',\n        awaySubStat: 'hits',\n        homeStat: 'home_batter_totals',\n        homeSubStat: 'hits'\n      }\n    }, {\n      'E': {\n        awayStat: 'away_errors',\n        awaySubStat: 'false',\n        homeStat: 'home_erros',\n        homeSubStat: 'false'\n      }\n    }]\n  },\n  NBA: {\n    normal: '<CARDNUM> Quarter',\n    small: 'Q<NUM>',\n    OT: 'OT<NUM>',\n    extras: [{\n      'T': {\n        awayStat: '<TOTAL>',\n        homeStat: '<TOTAL>',\n        awaySubStat: false,\n        homeSubStat: false\n      }\n    }]\n  }\n};\n\nclass PlayerContainer extends React.Component {\n  constructStatPlayer(playerObj, stat) {\n    let playerPerformance = '';\n    playerPerformance += \"\".concat(capitalizeString(stat), \": \").concat(playerObj[stat]);\n    return React.createElement(\"div\", {\n      className: \"player-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, playerPerformance)));\n  }\n\n  constructCategoryPlayer(category, playerObj, stats) {\n    if (stats) {\n      const statsToShow = this.createPlayerStats(playerObj, stats);\n\n      if (statsToShow.length > 0) {\n        return React.createElement(\"div\", {\n          className: \"player-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"stats\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"player-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n          className: \"player-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, category.toUpperCase()), React.createElement(\"div\", {\n          className: \"player-divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, statsToShow)));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        className: \"player-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)), React.createElement(\"div\", {\n        className: \"player-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, category.toUpperCase())));\n    }\n  }\n\n  createPlayerStats(playerObj, stats) {\n    let returnMsg = '';\n    stats.forEach(stat => {\n      if (playerObj[stat]) {\n        returnMsg += \"\".concat(stat.toUpperCase().replace(/_/g, ' '), \": \").concat(playerObj[stat], \", \");\n      }\n    });\n\n    if (returnMsg.length > 0) {\n      returnMsg = returnMsg.slice(0, -2);\n    }\n\n    return returnMsg;\n  }\n\n  createPlayerName(name, team) {\n    return \"\".concat(name, \" (\").concat(team, \")\");\n  }\n\n  render() {\n    let players = [];\n\n    if (Array.isArray(this.props.playerInfo)) {\n      this.props.playerInfo.forEach(player => {\n        players.push(this.constructStatPlayer(player, this.props.stat));\n      });\n    } else {\n      const stats = ['innings_pitched', 'earned_runs', 'strike_outs', 'era'];\n\n      for (let key in this.props.playerInfo) {\n        if (this.props.playerInfo.hasOwnProperty(key)) {\n          players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key], stats));\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, players));\n  }\n\n}\n\nclass GameContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(TeamColumn, {\n      gameStatus: this.props.gameStatus,\n      teams: this.props.teams,\n      useSmall: this.props.useSmall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(ScoreTable, {\n      useSmall: this.props.useSmall,\n      gameScore: this.props.gameScore,\n      league: this.props.league,\n      extraStats: this.props.extraStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ScoreTable extends React.Component {\n  createHeaderRow(periodLen, extraStatHeaders) {\n    const tempArr = Array.apply(null, Array(periodLen)).map((x, i) => {\n      return i + 1;\n    });\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, tempArr.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.generateHeaderLabel(val, false));\n    }), extraStatHeaders.map(header => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, header);\n    }));\n  }\n\n  createScoreRow(scores, extraStats) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, scores.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, val);\n    }), extraStats.map(val => {\n      return React.createElement(\"td\", {\n        className: \"score-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, this.generateStat(scores, val));\n    }));\n  }\n\n  generateStat(scores, statToReturn) {\n    console.log(statToReturn);\n    if (scores.length === 0) return;\n\n    if (statToReturn === '<TOTAL>') {\n      return scores.reduce((acc, val) => {\n        return acc + val;\n      });\n    }\n  }\n\n  generateHeaderLabel(idx, isOT) {\n    let returnStr = '';\n\n    if (isOT) {\n      returnStr += this.numReplace(periods[this.props.league].OT, idx);\n    } else if (this.props.useSmall) {\n      returnStr += this.numReplace(periods[this.props.league].small, idx);\n    } else {\n      returnStr += this.numReplace(periods[this.props.league].normal, idx);\n    }\n\n    return returnStr;\n  }\n\n  numReplace(str, idx) {\n    if (str.includes('<NUM>')) {\n      return str.replace('<NUM>', idx);\n    } else {\n      return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n    }\n  }\n\n  getNumberWithOrdinal(n) {\n    let s = [\"th\", \"st\", \"nd\", \"rd\"],\n        v = n % 100;\n    return n + (s[(v - 20) % 10] || s[v] || s[0]);\n  }\n\n  createTableData() {\n    let table = [];\n    const extraHeaders = this.props.extraStats.length > 0 ? Object.keys(this.props.extraStats) : [];\n    console.log(generateTeamStatsArray(this.props.extraStats, 'home'));\n    table.push(this.createHeaderRow(this.props.gameScore.home.length, extraHeaders));\n    table.push(this.createScoreRow(this.props.gameScore.away, this.props.extraStats));\n    table.push(this.createScoreRow(this.props.gameScore.home, this.props.extraStats));\n    return table;\n  }\n\n  render() {\n    const tableData = this.createTableData();\n    return React.createElement(\"div\", {\n      className: \"game-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, tableData)));\n  }\n\n}\n\nclass TeamColumn extends React.Component {\n  render() {\n    let propToUse = '';\n\n    if (this.props.useSmall) {\n      propToUse += 'abbv';\n    } else {\n      propToUse += 'name';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"teams-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, capitalizeString(this.props.gameStatus))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, this.props.teams.away[propToUse])), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.props.teams.home[propToUse])))));\n  }\n\n}\n\nclass Boxscore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: '',\n      league: '',\n      scoreInfo: {\n        away: [],\n        home: []\n      },\n      playerInfo: {},\n      teams: {\n        away: '',\n        home: ''\n      },\n      useSmall: false,\n      extraStats: []\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  checkWindowSize() {\n    let width = window.innerWidth;\n\n    if (width < 1150 && !this.state.useSmall || width >= 1150 && this.state.useSmall) {\n      this.updateSizeState();\n    }\n  }\n\n  updateSizeState() {\n    const newState = this.state;\n    newState.useSmall = !this.state.useSmall;\n    this.setState(newState);\n  }\n\n  async getGameInfo(leagueType) {\n    const gameInfo = await getGameInfo(leagueType);\n    const gameScore = await getGameScore(leagueType);\n    const teamInfo = await getTeamInfo(leagueType);\n    const playerInfo = await getPlayerInfo(leagueType);\n    const extraStats = await getExtraStats(leagueType);\n    let stateObj = {\n      league: leagueType\n    };\n    stateObj.gameStatus = gameInfo.status;\n    stateObj.location = gameInfo.location;\n    stateObj.scoreInfo = gameScore;\n    stateObj.teams = teamInfo;\n    stateObj.playerInfo = playerInfo;\n    stateObj.extraStats = extraStats;\n    return stateObj;\n  }\n\n  componentDidMount() {\n    this.getGameInfo('NBA').then(newState => {\n      this.setState(newState);\n    });\n    window.addEventListener('resize', () => {\n      this.checkWindowSize();\n    });\n  }\n\n  render() {\n    const stat = 'points';\n    return React.createElement(\"div\", {\n      className: \"boxscore-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      gameStatus: this.state.gameStatus,\n      gameScore: this.state.scoreInfo,\n      teams: this.state.teams,\n      useSmall: this.state.useSmall,\n      league: this.state.league,\n      extraStats: this.state.extraStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(PlayerContainer, {\n      playerInfo: this.state.playerInfo,\n      stat: stat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Boxscore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 400\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ========== HELPER FUNCTIONS ========== */\n\nfunction generateTeamStatsArray(arr, teamType) {\n  let returnArr = [];\n\n  for (const obj of arr) {\n    let key = Object.keys(obj)[0];\n    returnArr.push(obj[key][teamType]);\n  }\n\n  return returnArr;\n}\n\nasync function getExtraStats(leagueType) {\n  let returnStats = [];\n  const extraStats = periods[leagueType].extras;\n\n  for (const obj of extraStats) {\n    const statKey = Object.keys(obj)[0];\n    let tempObj = {};\n    let tempData = await getTeamStats(leagueType, obj[statKey]);\n    tempObj[statKey] = tempData;\n    returnStats.push(tempObj);\n  }\n\n  return returnStats;\n}\n\nasync function getTeamStats(leagueType, stateObj) {\n  let tempObj = {\n    away: {},\n    home: {}\n  };\n  let apiEndpoint = '';\n  let returnData; // Get Away Stats\n\n  if (stateObj.awayStat === '<TOTAL>') {\n    tempObj.away = '<TOTAL>';\n  } else {\n    apiEndpoint = apiURLConstructor(leagueType, stateObj.awayStat);\n    returnData = await fetchUrlData(apiEndpoint);\n\n    if (stateObj.awaySubStat) {\n      tempObj.away = returnData[stateObj.awaySubStat];\n    } else {\n      tempObj.away = returnData;\n    }\n  } // Get Home Stats\n\n\n  if (stateObj.homeStat === '<TOTAL>') {\n    tempObj.home = '<TOTAL>';\n  } else {\n    apiEndpoint = apiURLConstructor(leagueType, stateObj.homeStat);\n    returnData = await fetchUrlData(apiEndpoint);\n\n    if (stateObj.homeSubStat) {\n      tempObj.home = returnData[stateObj.homeSubStat];\n    } else {\n      tempObj.home = returnData;\n    }\n  }\n\n  return tempObj;\n}\n\nasync function getGameInfo(leagueType) {\n  const apiEndpoint = apiURLConstructor(leagueType, 'event_information');\n  const eventData = await fetchUrlData(apiEndpoint);\n  const returnObj = {\n    status: eventData.status,\n    location: constructLocObj(eventData.site)\n  };\n  return returnObj;\n}\n\nasync function getGameScore(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: homeData,\n    away: awayData\n  };\n  return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: constructTeamObj(homeData),\n    away: constructTeamObj(awayData)\n  };\n  return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n  const playerStatCategories = getLeagueStatCategory(leagueType);\n  const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n  const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n  const homePlayerData = await fetchUrlData(homeEndpoint);\n  const awayPlayerData = await fetchUrlData(awayEndpoint);\n  const playerDataObj = {\n    home: homePlayerData,\n    away: awayPlayerData\n  };\n  const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n  return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n  const keyStats = {\n    NBA: 'points',\n    MLB: ['win', 'loss', 'save']\n  };\n\n  if (!Array.isArray(keyStats[leagueType])) {\n    const stat = keyStats[leagueType];\n    const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n    return rankedPlayers;\n  } else {\n    const statsToFind = keyStats[leagueType];\n    const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n    return players;\n  }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n  const totalPlayers = arr1.concat(arr2);\n  let returnObj = {};\n\n  for (let entry of totalPlayers) {\n    if (entry[statsArr[0]]) {\n      returnObj[statsArr[0]] = entry;\n    } else if (entry[statsArr[1]]) {\n      returnObj[statsArr[1]] = entry;\n    } else if (entry[statsArr[2]]) {\n      returnObj[statsArr[2]] = entry;\n    } // Max amount we can give back\n\n\n    if (Object.keys(returnObj).length === 3) {\n      break;\n    }\n  }\n\n  return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n  const totalPlayers = arr1.concat(arr2);\n  return totalPlayers.sort((a, b) => statComparison(a, b, stat)).slice().filter((val, i) => {\n    return i < n;\n  });\n}\n\nfunction statComparison(a, b, stat) {\n  if (b[stat] > a[stat]) {\n    return 1;\n  } else if (a[stat] > b[stat]) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n  if (leagueType === 'NBA') {\n    return ['home_stats', 'away_stats'];\n  } else {\n    return ['home_pitchers', 'away_pitchers'];\n  }\n}\n\nfunction constructTeamObj(obj) {\n  return {\n    name: obj.full_name,\n    abbv: obj.abbreviation\n  };\n}\n\nfunction constructLocObj(obj) {\n  return {\n    name: \"\".concat(obj.city, \", \").concat(obj.state),\n    stadium: obj.name\n  };\n}\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\n\n\nfunction fetchUrlData(url) {\n  return new Promise((res, rej) => {\n    // Get our endpoint data\n    fetch(url).then(resp => {\n      // If it came back propertly, return it\n      if (resp.status === 200) {\n        res(resp.json()); // Otherwise send the error\n      } else {\n        rej(resp.statusText);\n      }\n    }).catch(err => {\n      rej(err);\n    });\n  });\n}\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\n\n\nfunction apiURLConstructor(league, typeOfStat) {\n  let baseURL = '/api/games';\n\n  if (league) {\n    baseURL += \"/\".concat(league.toUpperCase());\n  }\n\n  if (typeOfStat) {\n    baseURL += \"?stats=\".concat(typeOfStat);\n  }\n\n  return baseURL;\n}\n\nfunction capitalizeString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\index.js"],"names":["React","ReactDOM","periods","MLB","normal","small","OT","extras","awayStat","awaySubStat","homeStat","homeSubStat","NBA","PlayerContainer","Component","constructStatPlayer","playerObj","stat","playerPerformance","capitalizeString","createPlayerName","display_name","team_abbreviation","constructCategoryPlayer","category","stats","statsToShow","createPlayerStats","length","toUpperCase","returnMsg","forEach","replace","slice","name","team","render","players","Array","isArray","props","playerInfo","player","push","key","hasOwnProperty","GameContainer","gameStatus","teams","useSmall","gameScore","league","extraStats","ScoreTable","createHeaderRow","periodLen","extraStatHeaders","tempArr","apply","map","x","i","val","generateHeaderLabel","header","createScoreRow","scores","generateStat","statToReturn","console","log","reduce","acc","idx","isOT","returnStr","numReplace","str","includes","getNumberWithOrdinal","n","s","v","createTableData","table","extraHeaders","Object","keys","generateTeamStatsArray","home","away","tableData","TeamColumn","propToUse","Boxscore","constructor","state","scoreInfo","componentWillUnmount","window","removeEventListener","checkWindowSize","width","innerWidth","updateSizeState","newState","setState","getGameInfo","leagueType","gameInfo","getGameScore","teamInfo","getTeamInfo","getPlayerInfo","getExtraStats","stateObj","status","location","componentDidMount","then","addEventListener","document","getElementById","arr","teamType","returnArr","obj","returnStats","statKey","tempObj","tempData","getTeamStats","apiEndpoint","returnData","apiURLConstructor","fetchUrlData","eventData","returnObj","constructLocObj","site","homeEndpoint","awayEndpoint","homeData","awayData","constructTeamObj","playerStatCategories","getLeagueStatCategory","homePlayerData","awayPlayerData","playerDataObj","finalPlayerObj","createPlayerDataObj","keyStats","rankedPlayers","getNHighestTotals","statsToFind","findPlayerStats","statsArr","arr1","arr2","totalPlayers","concat","entry","sort","a","b","statComparison","filter","full_name","abbv","abbreviation","city","stadium","url","Promise","res","rej","fetch","resp","json","statusText","catch","err","typeOfStat","baseURL","charAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst periods = {\n    MLB: {\n        normal: '<CARDNUM> Inning',\n        small: '<NUM>',\n        OT: '<NUM>',\n        extras: [\n            {\n                'R': {\n                    awayStat: 'away_batter_totals',\n                    awaySubStat: 'runs',\n                    homeStat: 'home_batter_totals',\n                    homeSubStat: 'runs'\n                }\n            },\n            {\n                'H': {\n                    awayStat: 'away_batter_totals',\n                    awaySubStat: 'hits',\n                    homeStat: 'home_batter_totals',\n                    homeSubStat: 'hits'\n                }\n            },\n            {\n                'E': {\n                    awayStat: 'away_errors',\n                    awaySubStat: 'false',\n                    homeStat: 'home_erros',\n                    homeSubStat: 'false'\n                }\n            }\n        ]\n    },\n    NBA: {\n        normal: '<CARDNUM> Quarter',\n        small: 'Q<NUM>',\n        OT: 'OT<NUM>',\n        extras: [\n            {\n                'T': {\n                    awayStat: '<TOTAL>',\n                    homeStat: '<TOTAL>',\n                    awaySubStat: false,\n                    homeSubStat: false\n                }\n            }\n        ]\n    }\n}\n\nclass PlayerContainer extends React.Component {\n    constructStatPlayer(playerObj, stat) {\n        let playerPerformance = '';\n        playerPerformance += `${capitalizeString(stat)}: ${playerObj[stat]}`;\n\n        return (\n            <div className=\"player-card\">\n                <div className=\"stats\">\n                    <div className=\"player-divider\">\n                        {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                    </div>\n                    <div className=\"player-divider\">\n                        {playerPerformance}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    constructCategoryPlayer(category, playerObj, stats) {\n        if (stats) {\n            const statsToShow = this.createPlayerStats(playerObj, stats);\n\n            if (statsToShow.length > 0) {\n                return (\n                    <div className=\"player-card\">\n                        <div className=\"stats\">\n                            <div className=\"player-divider\">\n                                {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                            </div>\n                            <div className=\"player-divider\">\n                                {category.toUpperCase()}\n                            </div>\n                            <div className=\"player-divider\">\n                                {statsToShow}\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <div className=\"player-card\">\n                    <div className=\"stats\">\n                        <div className=\"player-divider\">\n                            {this.createPlayerName(playerObj.display_name, playerObj.team_abbreviation)}\n                        </div>\n                        <div className=\"player-divider\">\n                            {category.toUpperCase()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    createPlayerStats(playerObj, stats) {\n        let returnMsg = '';\n\n        stats.forEach((stat) => {\n            if (playerObj[stat]) {\n                returnMsg += `${stat.toUpperCase().replace(/_/g, ' ')}: ${playerObj[stat]}, `;\n            }\n        });\n\n        if (returnMsg.length > 0) {\n            returnMsg = returnMsg.slice(0, -2);\n        }\n\n        return returnMsg;\n    }\n\n    createPlayerName (name, team) {\n        return `${name} (${team})`;\n    }\n\n    render() {\n        let players = [];\n\n        if (Array.isArray(this.props.playerInfo)) {\n            this.props.playerInfo.forEach((player) => {\n                players.push(this.constructStatPlayer(player, this.props.stat));\n            });\n        } else {\n            const stats = ['innings_pitched', 'earned_runs', 'strike_outs', 'era'];\n\n            for (let key in this.props.playerInfo) {\n                if (this.props.playerInfo.hasOwnProperty(key)) {\n                    players.push(this.constructCategoryPlayer(key, this.props.playerInfo[key], stats));\n                }\n            }\n        }\n\n        return (\n            <div className=\"player-container\">\n                <div className=\"players\">\n                    {players}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GameContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"game-container\">\n                <TeamColumn gameStatus={this.props.gameStatus}\n                    teams={this.props.teams}\n                    useSmall={this.props.useSmall} />\n                <ScoreTable useSmall={this.props.useSmall}\n                    gameScore={this.props.gameScore}\n                    league={this.props.league}\n                    extraStats={this.props.extraStats} />\n            </div>\n        );\n    }\n}\n\nclass ScoreTable extends React.Component {\n    createHeaderRow(periodLen, extraStatHeaders) {\n        const tempArr = Array.apply(null, Array(periodLen))\n            .map((x, i) => { \n                return i + 1;\n            });\n\n        return (\n            <tr>\n                {\n                    tempArr.map((val) => {\n                        return <td className=\"score-cell\">{this.generateHeaderLabel(val, false)}</td>;\n                    })\n                }\n                {\n                    extraStatHeaders.map((header) => {\n                        return <td className=\"score-cell\">{header}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    createScoreRow(scores, extraStats) {\n        return (\n            <tr>\n                {\n                    scores.map((val) => {\n                        return <td className=\"score-cell\">{val}</td>\n                    })\n                }\n                {\n                    extraStats.map((val) => {\n                        return <td className=\"score-cell\">{this.generateStat(scores, val)}</td>\n                    })\n                }\n            </tr>\n        );\n    }\n\n    generateStat(scores, statToReturn) {\n        console.log(statToReturn);\n        if (scores.length === 0) return;\n\n        if (statToReturn === '<TOTAL>') {\n            return scores.reduce((acc, val) => {\n                return acc + val;\n            });\n        }\n    }\n\n    generateHeaderLabel(idx, isOT) {\n        let returnStr = '';\n\n        if (isOT) {\n            returnStr += this.numReplace(periods[this.props.league].OT, idx);\n        } else if (this.props.useSmall) {\n            returnStr += this.numReplace(periods[this.props.league].small, idx);\n        } else {\n            returnStr += this.numReplace(periods[this.props.league].normal, idx);\n        }\n\n        return returnStr;\n    }\n\n    numReplace(str, idx) {\n        if (str.includes('<NUM>')) {\n            return str.replace('<NUM>', idx);\n        } else {\n            return str.replace('<CARDNUM>', this.getNumberWithOrdinal(idx));\n        }\n    }\n\n    getNumberWithOrdinal(n) {\n        let s=[\"th\",\"st\",\"nd\",\"rd\"],\n        v= n % 100;\n        return n + (s[(v-20)%10]||s[v]||s[0]);\n     }\n\n    createTableData() {\n        let table = [];\n        const extraHeaders = this.props.extraStats.length > 0 ? Object.keys(this.props.extraStats) : [];\n        console.log(generateTeamStatsArray(this.props.extraStats, 'home'));\n\n        table.push(this.createHeaderRow(this.props.gameScore.home.length, extraHeaders));\n        table.push(this.createScoreRow(this.props.gameScore.away, this.props.extraStats));\n        table.push(this.createScoreRow(this.props.gameScore.home, this.props.extraStats));\n\n        return table;\n    }\n\n    render() {\n        const tableData = this.createTableData();\n\n        return (\n            <div className=\"game-score\">\n                <table>\n                    <tbody>\n                        {tableData}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass TeamColumn extends React.Component {\n    render() {\n        let propToUse = '';\n\n        if (this.props.useSmall) {\n            propToUse += 'abbv';\n        } else {\n            propToUse += 'name';\n        }\n\n        return (\n            <div className=\"teams-container\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {capitalizeString(this.props.gameStatus)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.away[propToUse]}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.props.teams.home[propToUse]}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass Boxscore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameStatus: '',\n            league: '',\n            scoreInfo: {away: [], home: []},\n            playerInfo: {},\n            teams: {away: '', home: ''},\n            useSmall: false,\n            extraStats: []\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', () => {\n            this.checkWindowSize()\n        });\n    }\n\n    checkWindowSize() {\n        let width = window.innerWidth;\n\n        if ((width < 1150 && !this.state.useSmall) || (width >= 1150 && this.state.useSmall)) {\n            this.updateSizeState();\n        }\n    }\n\n    updateSizeState() {\n        const newState = this.state;\n        newState.useSmall = !this.state.useSmall;\n\n        this.setState(newState);\n    }\n\n    async getGameInfo(leagueType) {\n        const gameInfo = await getGameInfo(leagueType);\n        const gameScore = await getGameScore(leagueType);\n        const teamInfo = await getTeamInfo(leagueType);\n        const playerInfo = await getPlayerInfo(leagueType);\n        const extraStats = await getExtraStats(leagueType);\n        let stateObj = {\n            league: leagueType\n        };\n\n        stateObj.gameStatus = gameInfo.status;\n        stateObj.location = gameInfo.location;\n        stateObj.scoreInfo = gameScore;\n        stateObj.teams = teamInfo;\n        stateObj.playerInfo = playerInfo;\n        stateObj.extraStats = extraStats;\n        \n        return stateObj;\n    }\n\n    componentDidMount() {\n        this.getGameInfo('NBA')\n            .then((newState) => {\n                this.setState(newState);\n            });\n\n        window.addEventListener('resize', () => {\n            this.checkWindowSize();\n        });\n    }\n\n    render() {\n        const stat = 'points';\n\n        return (\n            <div className=\"boxscore-container\">\n                <GameContainer gameStatus={this.state.gameStatus}\n                               gameScore={this.state.scoreInfo}\n                               teams={this.state.teams}\n                               useSmall={this.state.useSmall}\n                               league={this.state.league}\n                               extraStats={this.state.extraStats}/>\n                <PlayerContainer playerInfo={this.state.playerInfo}\n                                 stat={stat}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Boxscore />,\n    document.getElementById('root')\n);\n\n/* ========== HELPER FUNCTIONS ========== */\n\nfunction generateTeamStatsArray(arr, teamType) {\n    let returnArr = [];\n\n    for (const obj of arr) {\n        let key = Object.keys(obj)[0];\n\n        returnArr.push(obj[key][teamType]);\n    }\n\n    return returnArr;\n}\n\nasync function getExtraStats(leagueType) {\n    let returnStats = [];\n    const extraStats = periods[leagueType].extras;\n\n    for (const obj of extraStats) {\n        const statKey = Object.keys(obj)[0];\n        let tempObj ={};\n\n        let tempData = await getTeamStats(leagueType, obj[statKey]);\n        tempObj[statKey] = tempData;\n        returnStats.push(tempObj);\n    }\n\n    return returnStats;\n}\n\nasync function getTeamStats(leagueType, stateObj) {\n    let tempObj = { away: {}, home: {} };\n    let apiEndpoint = '';\n    let returnData;\n\n    // Get Away Stats\n    if (stateObj.awayStat === '<TOTAL>') {\n        tempObj.away = '<TOTAL>';\n    } else {\n        apiEndpoint = apiURLConstructor(leagueType, stateObj.awayStat);\n        returnData = await fetchUrlData(apiEndpoint);\n\n        if (stateObj.awaySubStat) {\n            tempObj.away = returnData[stateObj.awaySubStat];\n        } else {\n            tempObj.away = returnData;\n        }\n    }\n\n    // Get Home Stats\n    if (stateObj.homeStat === '<TOTAL>') {\n        tempObj.home = '<TOTAL>';\n    } else {\n        apiEndpoint = apiURLConstructor(leagueType, stateObj.homeStat);\n        returnData = await fetchUrlData(apiEndpoint);\n\n        if (stateObj.homeSubStat) {\n            tempObj.home = returnData[stateObj.homeSubStat];\n        } else {\n            tempObj.home = returnData;\n        }\n    }\n\n    return tempObj;\n}\n\nasync function getGameInfo(leagueType) {\n    const apiEndpoint = apiURLConstructor(leagueType, 'event_information')\n    const eventData = await fetchUrlData(apiEndpoint);\n    const returnObj = {\n        status: eventData.status,\n        location: constructLocObj(eventData.site)\n    };\n\n    return returnObj\n}\n\nasync function getGameScore(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: homeData,\n        away: awayData\n    }\n\n    return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: constructTeamObj(homeData),\n        away: constructTeamObj(awayData)\n    }\n\n    return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n    const playerStatCategories = getLeagueStatCategory(leagueType);\n    const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n    const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n    const homePlayerData = await fetchUrlData(homeEndpoint);\n    const awayPlayerData = await fetchUrlData(awayEndpoint);\n    const playerDataObj = {\n        home: homePlayerData,\n        away: awayPlayerData\n    };\n    const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n\n    return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n    const keyStats = {\n        NBA: 'points',\n        MLB: ['win', 'loss', 'save']\n    }\n\n    if (!Array.isArray(keyStats[leagueType])) {\n        const stat = keyStats[leagueType];\n        const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n        \n        return rankedPlayers\n    } else {\n        const statsToFind = keyStats[leagueType];\n        const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n\n        return players;\n    }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n    const totalPlayers = arr1.concat(arr2);\n    let returnObj = {};\n\n    for (let entry of totalPlayers) {\n        if (entry[statsArr[0]]) {\n            returnObj[statsArr[0]] = entry;\n        } else if (entry[statsArr[1]]) {\n            returnObj[statsArr[1]] = entry;\n        } else if (entry[statsArr[2]]) {\n            returnObj[statsArr[2]] = entry;\n        }\n\n        // Max amount we can give back\n        if (Object.keys(returnObj).length === 3) {\n            break;\n        }\n    }\n\n    return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n    const totalPlayers = arr1.concat(arr2);\n\n    return totalPlayers\n        .sort((a, b) => statComparison(a, b, stat))\n        .slice()\n        .filter((val, i) => {\n            return i < n;\n        });\n}\n\nfunction statComparison(a, b, stat) {\n    if (b[stat] > a[stat]) {\n        return 1;\n    } else if (a[stat] > b[stat]) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n    if (leagueType === 'NBA') {\n        return ['home_stats', 'away_stats'];\n    } else {\n        return ['home_pitchers', 'away_pitchers']\n    }\n}\n\nfunction constructTeamObj(obj) {\n    return {\n        name: obj.full_name,\n        abbv: obj.abbreviation\n    };\n}\n\nfunction constructLocObj(obj) {\n    return {\n        name: `${obj.city}, ${obj.state}`,\n        stadium: obj.name\n    };\n}\n\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\nfunction fetchUrlData(url) {\n    return new Promise((res, rej) => {\n        // Get our endpoint data\n        fetch(url)\n            .then((resp) => {\n                // If it came back propertly, return it\n                if (resp.status === 200) {\n                    res(resp.json());\n                // Otherwise send the error\n                } else {\n                    rej(resp.statusText);\n                }\n            })\n            .catch((err) => {\n                rej(err);\n            });\n    });\n}\n\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\nfunction apiURLConstructor(league, typeOfStat) {\n    let baseURL = '/api/games';\n\n    if (league) {\n        baseURL += `/${league.toUpperCase()}`;\n    }\n\n    if (typeOfStat) {\n        baseURL += `?stats=${typeOfStat}`;\n    }\n\n    return baseURL;\n}\n\nfunction capitalizeString(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}"]},"metadata":{},"sourceType":"module"}