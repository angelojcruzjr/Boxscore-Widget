{"ast":null,"code":"/**\r\n * @name fetchUrlData\r\n * @param {String} url API endpoint to hit\r\n * @returns {void}\r\n */\nfunction fetchUrlData(url) {\n  return new Promise((res, rej) => {\n    // Get our endpoint data\n    fetch(url).then(resp => {\n      // If it came back propertly, return it\n      if (resp.status === 200) {\n        res(resp.json()); // Otherwise send the error\n      } else {\n        rej(resp.statusText);\n      }\n    }).catch(err => {\n      rej(err);\n    });\n  });\n}\n/**\r\n * @name apiURLConstructor\r\n * @param {String} league NBA vs. MLB\r\n * @param {String} typeOfStat What aggregator stat would you like\r\n */\n\n\nfunction apiURLConstructor(league, typeOfStat) {\n  let baseURL = '/api/games';\n\n  if (league) {\n    baseURL += \"/\".concat(league.toUpperCase());\n  }\n\n  if (typeOfStat) {\n    baseURL += \"?stats=\".concat(typeOfStat);\n  }\n\n  return baseURL;\n}\n\nfunction capitalizeString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nmodule.exports = {\n  capitalizeString: capitalizeString,\n  apiURLConstructor: apiURLConstructor,\n  fetchUrlData: fetchUrlData\n};","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\utils.js"],"names":["fetchUrlData","url","Promise","res","rej","fetch","then","resp","status","json","statusText","catch","err","apiURLConstructor","league","typeOfStat","baseURL","toUpperCase","capitalizeString","str","charAt","slice","module","exports"],"mappings":"AAAA;;;;;AAKA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B;AACAC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACKK,IADL,CACWC,IAAD,IAAU;AACZ;AACA,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrBL,QAAAA,GAAG,CAACI,IAAI,CAACE,IAAL,EAAD,CAAH,CADqB,CAEzB;AACC,OAHD,MAGO;AACHL,QAAAA,GAAG,CAACG,IAAI,CAACG,UAAN,CAAH;AACH;AACJ,KATL,EAUKC,KAVL,CAUYC,GAAD,IAAS;AACZR,MAAAA,GAAG,CAACQ,GAAD,CAAH;AACH,KAZL;AAaH,GAfM,CAAP;AAgBH;AAED;;;;;;;AAKA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,UAAnC,EAA+C;AAC3C,MAAIC,OAAO,GAAG,YAAd;;AAEA,MAAIF,MAAJ,EAAY;AACRE,IAAAA,OAAO,eAAQF,MAAM,CAACG,WAAP,EAAR,CAAP;AACH;;AAED,MAAIF,UAAJ,EAAgB;AACZC,IAAAA,OAAO,qBAAcD,UAAd,CAAP;AACH;;AAED,SAAOC,OAAP;AACH;;AAED,SAASE,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B,SAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcH,WAAd,KAA8BE,GAAG,CAACE,KAAJ,CAAU,CAAV,CAArC;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACbL,EAAAA,gBAAgB,EAAEA,gBADL;AAEbL,EAAAA,iBAAiB,EAAEA,iBAFN;AAGbb,EAAAA,YAAY,EAAEA;AAHD,CAAjB","sourcesContent":["/**\r\n * @name fetchUrlData\r\n * @param {String} url API endpoint to hit\r\n * @returns {void}\r\n */\r\nfunction fetchUrlData(url) {\r\n    return new Promise((res, rej) => {\r\n        // Get our endpoint data\r\n        fetch(url)\r\n            .then((resp) => {\r\n                // If it came back propertly, return it\r\n                if (resp.status === 200) {\r\n                    res(resp.json());\r\n                // Otherwise send the error\r\n                } else {\r\n                    rej(resp.statusText);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                rej(err);\r\n            });\r\n    });\r\n}\r\n\r\n/**\r\n * @name apiURLConstructor\r\n * @param {String} league NBA vs. MLB\r\n * @param {String} typeOfStat What aggregator stat would you like\r\n */\r\nfunction apiURLConstructor(league, typeOfStat) {\r\n    let baseURL = '/api/games';\r\n\r\n    if (league) {\r\n        baseURL += `/${league.toUpperCase()}`;\r\n    }\r\n\r\n    if (typeOfStat) {\r\n        baseURL += `?stats=${typeOfStat}`;\r\n    }\r\n\r\n    return baseURL;\r\n}\r\n\r\nfunction capitalizeString(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nmodule.exports = {\r\n    capitalizeString: capitalizeString,\r\n    apiURLConstructor: apiURLConstructor,\r\n    fetchUrlData: fetchUrlData\r\n}"]},"metadata":{},"sourceType":"module"}