{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\barstool\\\\boxscore-widget\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass PlayerContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass GameContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Boxscore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: '',\n      league: '',\n      gameInfo: {},\n      playerInfo: {}\n    };\n  }\n\n  async getGameInfo(leagueType) {\n    const gameInfo = await getGameInfo(leagueType);\n    const gameScore = await getGameScore(leagueType);\n    const teamInfo = await getTeamInfo(leagueType);\n    const playerInfo = await getPlayerInfo(leagueType);\n    let stateObj = {\n      league: leagueType\n    };\n    stateObj.gameStatus = gameInfo.status;\n    stateObj.location = gameInfo.location;\n    stateObj.scoreInfo = gameScore;\n    stateObj.teams = teamInfo;\n    stateObj.playerInfo = playerInfo;\n    this.setState({\n      stateObj\n    });\n  }\n\n  render() {\n    this.getGameInfo('MLB');\n    return React.createElement(\"div\", {\n      className: \"boxscore-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      gameStatus: this.state.gameStatus,\n      gameScore: this.state.scoreInfo,\n      teams: this.state.teams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(PlayerContainer, {\n      playerInfo: this.state.playerInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Boxscore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ========== HELPER FUNCTIONS ========== */\n\nasync function getGameInfo(leagueType) {\n  const apiEndpoint = apiURLConstructor(leagueType, 'event_information');\n  const eventData = await fetchUrlData(apiEndpoint);\n  const returnObj = {\n    status: eventData.status,\n    location: constructLocObj(eventData.site)\n  };\n  return returnObj;\n}\n\nasync function getGameScore(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: homeData,\n    away: awayData\n  };\n  return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: constructTeamObj(homeData),\n    away: constructTeamObj(awayData)\n  };\n  return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n  const playerStatCategories = getLeagueStatCategory(leagueType);\n  const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n  const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n  const homePlayerData = await fetchUrlData(homeEndpoint);\n  const awayPlayerData = await fetchUrlData(awayEndpoint);\n  const playerDataObj = {\n    home: homePlayerData,\n    away: awayPlayerData\n  };\n  const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n  return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n  const keyStats = {\n    NBA: 'points',\n    MLB: ['win', 'loss', 'save']\n  };\n\n  if (!Array.isArray(keyStats[leagueType])) {\n    const stat = keyStats[leagueType];\n    const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n    return rankedPlayers;\n  } else {\n    const statsToFind = keyStats[leagueType];\n    const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n    return players;\n  }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n  const totalPlayers = arr1.concat(arr2);\n  let returnObj = {};\n\n  for (let entry of totalPlayers) {\n    if (entry[statsArr[0]]) {\n      returnObj[statsArr[0]] = entry;\n    } else if (entry[statsArr[1]]) {\n      returnObj[statsArr[1]] = entry;\n    } else if (entry[statsArr[2]]) {\n      returnObj[statsArr[2]] = entry;\n    } // Max amount we can give back\n\n\n    if (Object.keys(returnObj).length === 3) {\n      break;\n    }\n  }\n\n  return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n  const totalPlayers = arr1.concat(arr2);\n  return totalPlayers.sort((a, b) => statComparison(a, b, stat)).slice().filter((val, i) => {\n    return i < n;\n  });\n}\n\nfunction statComparison(a, b, stat) {\n  if (b[stat] > a[stat]) {\n    return 1;\n  } else if (a[stat] > b[stat]) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n  if (leagueType === 'NBA') {\n    return ['home_stats', 'away_stats'];\n  } else {\n    return ['home_pitchers', 'away_pitchers'];\n  }\n}\n\nfunction constructTeamObj(obj) {\n  return {\n    name: obj.full_name,\n    abbv: obj.abbreviation\n  };\n}\n\nfunction constructLocObj(obj) {\n  return {\n    name: \"\".concat(obj.city, \", \").concat(obj.state),\n    stadium: obj.name\n  };\n}\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\n\n\nfunction fetchUrlData(url) {\n  return new Promise((res, rej) => {\n    // Get our endpoint data\n    fetch(url).then(resp => {\n      // If it came back propertly, return it\n      if (resp.status === 200) {\n        res(resp.json()); // Otherwise send the error\n      } else {\n        rej(resp.statusText);\n      }\n    }).catch(err => {\n      rej(err);\n    });\n  });\n}\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\n\n\nfunction apiURLConstructor(league, typeOfStat) {\n  let baseURL = '/api/games';\n\n  if (league) {\n    baseURL += \"/\".concat(league.toUpperCase());\n  }\n\n  if (typeOfStat) {\n    baseURL += \"?stats=\".concat(typeOfStat);\n  }\n\n  return baseURL;\n}","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\index.js"],"names":["React","ReactDOM","PlayerContainer","Component","render","GameContainer","Boxscore","constructor","props","state","gameStatus","league","gameInfo","playerInfo","getGameInfo","leagueType","gameScore","getGameScore","teamInfo","getTeamInfo","getPlayerInfo","stateObj","status","location","scoreInfo","teams","setState","document","getElementById","apiEndpoint","apiURLConstructor","eventData","fetchUrlData","returnObj","constructLocObj","site","homeEndpoint","awayEndpoint","homeData","awayData","home","away","constructTeamObj","playerStatCategories","getLeagueStatCategory","homePlayerData","awayPlayerData","playerDataObj","finalPlayerObj","createPlayerDataObj","keyStats","NBA","MLB","Array","isArray","stat","rankedPlayers","getNHighestTotals","statsToFind","players","findPlayerStats","statsArr","arr1","arr2","totalPlayers","concat","entry","Object","keys","length","n","sort","a","b","statComparison","slice","filter","val","i","obj","name","full_name","abbv","abbreviation","city","stadium","url","Promise","res","rej","fetch","then","resp","json","statusText","catch","err","typeOfStat","baseURL","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass PlayerContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"player-container\">\n            </div>\n        );\n    }\n}\n\nclass GameContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"game-container\">\n            </div>\n        );\n    }\n}\n\nclass Boxscore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameStatus: '',\n            league: '',\n            gameInfo: {},\n            playerInfo: {}\n        }\n    }\n\n    async getGameInfo(leagueType) {\n        const gameInfo = await getGameInfo(leagueType);\n        const gameScore = await getGameScore(leagueType);\n        const teamInfo = await getTeamInfo(leagueType);\n        const playerInfo = await getPlayerInfo(leagueType);\n        let stateObj = {\n            league: leagueType\n        };\n\n        stateObj.gameStatus = gameInfo.status;\n        stateObj.location = gameInfo.location;\n        stateObj.scoreInfo = gameScore;\n        stateObj.teams = teamInfo;\n        stateObj.playerInfo = playerInfo;\n        \n        this.setState({\n            stateObj\n        });\n    }\n\n    render() {\n        this.getGameInfo('MLB');\n\n        return (\n            <div className=\"boxscore-container\">\n                <GameContainer gameStatus={this.state.gameStatus}\n                               gameScore={this.state.scoreInfo}\n                               teams={this.state.teams}/>\n                <PlayerContainer playerInfo={this.state.playerInfo}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Boxscore />,\n    document.getElementById('root')\n);\n\n/* ========== HELPER FUNCTIONS ========== */\n\nasync function getGameInfo(leagueType) {\n    const apiEndpoint = apiURLConstructor(leagueType, 'event_information')\n    const eventData = await fetchUrlData(apiEndpoint);\n    const returnObj = {\n        status: eventData.status,\n        location: constructLocObj(eventData.site)\n    };\n\n    return returnObj\n}\n\nasync function getGameScore(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: homeData,\n        away: awayData\n    }\n\n    return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: constructTeamObj(homeData),\n        away: constructTeamObj(awayData)\n    }\n\n    return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n    const playerStatCategories = getLeagueStatCategory(leagueType);\n    const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n    const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n    const homePlayerData = await fetchUrlData(homeEndpoint);\n    const awayPlayerData = await fetchUrlData(awayEndpoint);\n    const playerDataObj = {\n        home: homePlayerData,\n        away: awayPlayerData\n    };\n    const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n\n    return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n    const keyStats = {\n        NBA: 'points',\n        MLB: ['win', 'loss', 'save']\n    }\n\n    if (!Array.isArray(keyStats[leagueType])) {\n        const stat = keyStats[leagueType];\n        const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n        \n        return rankedPlayers\n    } else {\n        const statsToFind = keyStats[leagueType];\n        const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n\n        return players;\n    }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n    const totalPlayers = arr1.concat(arr2);\n    let returnObj = {};\n\n    for (let entry of totalPlayers) {\n        if (entry[statsArr[0]]) {\n            returnObj[statsArr[0]] = entry;\n        } else if (entry[statsArr[1]]) {\n            returnObj[statsArr[1]] = entry;\n        } else if (entry[statsArr[2]]) {\n            returnObj[statsArr[2]] = entry;\n        }\n\n        // Max amount we can give back\n        if (Object.keys(returnObj).length === 3) {\n            break;\n        }\n    }\n\n    return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n    const totalPlayers = arr1.concat(arr2);\n\n    return totalPlayers\n        .sort((a, b) => statComparison(a, b, stat))\n        .slice()\n        .filter((val, i) => {\n            return i < n;\n        });\n}\n\nfunction statComparison(a, b, stat) {\n    if (b[stat] > a[stat]) {\n        return 1;\n    } else if (a[stat] > b[stat]) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n    if (leagueType === 'NBA') {\n        return ['home_stats', 'away_stats'];\n    } else {\n        return ['home_pitchers', 'away_pitchers']\n    }\n}\n\nfunction constructTeamObj(obj) {\n    return {\n        name: obj.full_name,\n        abbv: obj.abbreviation\n    };\n}\n\nfunction constructLocObj(obj) {\n    return {\n        name: `${obj.city}, ${obj.state}`,\n        stadium: obj.name\n    };\n}\n\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\nfunction fetchUrlData(url) {\n    return new Promise((res, rej) => {\n        // Get our endpoint data\n        fetch(url)\n            .then((resp) => {\n                // If it came back propertly, return it\n                if (resp.status === 200) {\n                    res(resp.json());\n                // Otherwise send the error\n                } else {\n                    rej(resp.statusText);\n                }\n            })\n            .catch((err) => {\n                rej(err);\n            });\n    });\n}\n\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\nfunction apiURLConstructor(league, typeOfStat) {\n    let baseURL = '/api/games';\n\n    if (league) {\n        baseURL += `/${league.toUpperCase()}`;\n    }\n\n    if (typeOfStat) {\n        baseURL += `?stats=${typeOfStat}`;\n    }\n\n    return baseURL;\n}"]},"metadata":{},"sourceType":"module"}