{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\barstool\\\\boxscore-widget\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass PlayerContainer extends React.Component {\n  constructStatPlayer(playerObj, stat, len) {\n    let playerPerformance = '';\n    playerPerformance += \"\".concat(stat.charAt(0).toUpperCase() + stat.slice(1), \": \").concat(playerObj[stat]);\n    const playerCard = {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    };\n    return React.createElement(\"div\", {\n      style: playerCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, playerObj.display_name), React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, playerPerformance), React.createElement(\"div\", {\n      className: \"player-divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, playerObj.team_abbreviation));\n  }\n\n  render() {\n    let players = '';\n\n    if (Array.isArray(this.props.playerInfo)) {\n      players = [];\n      this.props.playerInfo.forEach(player => {\n        players.push(this.constructStatPlayer(player, this.props.stat, this.props.playerInfo.length));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"player-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"players\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, players));\n  }\n\n}\n\nclass GameContainer extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Boxscore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStatus: '',\n      league: '',\n      gameInfo: {},\n      playerInfo: {}\n    };\n  }\n\n  async getGameInfo(leagueType) {\n    const gameInfo = await getGameInfo(leagueType);\n    const gameScore = await getGameScore(leagueType);\n    const teamInfo = await getTeamInfo(leagueType);\n    const playerInfo = await getPlayerInfo(leagueType);\n    let stateObj = {\n      league: leagueType\n    };\n    stateObj.gameStatus = gameInfo.status;\n    stateObj.location = gameInfo.location;\n    stateObj.scoreInfo = gameScore;\n    stateObj.teams = teamInfo;\n    stateObj.playerInfo = playerInfo;\n    return stateObj;\n  }\n\n  componentDidMount() {\n    this.getGameInfo('NBA').then(newState => {\n      this.setState(newState);\n    });\n  }\n\n  render() {\n    const stat = 'points';\n    return React.createElement(\"div\", {\n      className: \"boxscore-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(GameContainer, {\n      gameStatus: this.state.gameStatus,\n      gameScore: this.state.scoreInfo,\n      teams: this.state.teams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(PlayerContainer, {\n      playerInfo: this.state.playerInfo,\n      stat: stat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Boxscore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ========== HELPER FUNCTIONS ========== */\n\nasync function getGameInfo(leagueType) {\n  const apiEndpoint = apiURLConstructor(leagueType, 'event_information');\n  const eventData = await fetchUrlData(apiEndpoint);\n  const returnObj = {\n    status: eventData.status,\n    location: constructLocObj(eventData.site)\n  };\n  return returnObj;\n}\n\nasync function getGameScore(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: homeData,\n    away: awayData\n  };\n  return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n  const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n  const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n  const homeData = await fetchUrlData(homeEndpoint);\n  const awayData = await fetchUrlData(awayEndpoint);\n  const returnObj = {\n    home: constructTeamObj(homeData),\n    away: constructTeamObj(awayData)\n  };\n  return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n  const playerStatCategories = getLeagueStatCategory(leagueType);\n  const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n  const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n  const homePlayerData = await fetchUrlData(homeEndpoint);\n  const awayPlayerData = await fetchUrlData(awayEndpoint);\n  const playerDataObj = {\n    home: homePlayerData,\n    away: awayPlayerData\n  };\n  const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n  return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n  const keyStats = {\n    NBA: 'points',\n    MLB: ['win', 'loss', 'save']\n  };\n\n  if (!Array.isArray(keyStats[leagueType])) {\n    const stat = keyStats[leagueType];\n    const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n    return rankedPlayers;\n  } else {\n    const statsToFind = keyStats[leagueType];\n    const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n    return players;\n  }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n  const totalPlayers = arr1.concat(arr2);\n  let returnObj = {};\n\n  for (let entry of totalPlayers) {\n    if (entry[statsArr[0]]) {\n      returnObj[statsArr[0]] = entry;\n    } else if (entry[statsArr[1]]) {\n      returnObj[statsArr[1]] = entry;\n    } else if (entry[statsArr[2]]) {\n      returnObj[statsArr[2]] = entry;\n    } // Max amount we can give back\n\n\n    if (Object.keys(returnObj).length === 3) {\n      break;\n    }\n  }\n\n  return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n  const totalPlayers = arr1.concat(arr2);\n  return totalPlayers.sort((a, b) => statComparison(a, b, stat)).slice().filter((val, i) => {\n    return i < n;\n  });\n}\n\nfunction statComparison(a, b, stat) {\n  if (b[stat] > a[stat]) {\n    return 1;\n  } else if (a[stat] > b[stat]) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n  if (leagueType === 'NBA') {\n    return ['home_stats', 'away_stats'];\n  } else {\n    return ['home_pitchers', 'away_pitchers'];\n  }\n}\n\nfunction constructTeamObj(obj) {\n  return {\n    name: obj.full_name,\n    abbv: obj.abbreviation\n  };\n}\n\nfunction constructLocObj(obj) {\n  return {\n    name: \"\".concat(obj.city, \", \").concat(obj.state),\n    stadium: obj.name\n  };\n}\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\n\n\nfunction fetchUrlData(url) {\n  return new Promise((res, rej) => {\n    // Get our endpoint data\n    fetch(url).then(resp => {\n      // If it came back propertly, return it\n      if (resp.status === 200) {\n        res(resp.json()); // Otherwise send the error\n      } else {\n        rej(resp.statusText);\n      }\n    }).catch(err => {\n      rej(err);\n    });\n  });\n}\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\n\n\nfunction apiURLConstructor(league, typeOfStat) {\n  let baseURL = '/api/games';\n\n  if (league) {\n    baseURL += \"/\".concat(league.toUpperCase());\n  }\n\n  if (typeOfStat) {\n    baseURL += \"?stats=\".concat(typeOfStat);\n  }\n\n  return baseURL;\n}","map":{"version":3,"sources":["C:\\workspace\\barstool\\boxscore-widget\\client\\src\\index.js"],"names":["React","ReactDOM","PlayerContainer","Component","constructStatPlayer","playerObj","stat","len","playerPerformance","charAt","toUpperCase","slice","playerCard","display","flexDirection","height","display_name","team_abbreviation","render","players","Array","isArray","props","playerInfo","forEach","player","push","length","GameContainer","Boxscore","constructor","state","gameStatus","league","gameInfo","getGameInfo","leagueType","gameScore","getGameScore","teamInfo","getTeamInfo","getPlayerInfo","stateObj","status","location","scoreInfo","teams","componentDidMount","then","newState","setState","document","getElementById","apiEndpoint","apiURLConstructor","eventData","fetchUrlData","returnObj","constructLocObj","site","homeEndpoint","awayEndpoint","homeData","awayData","home","away","constructTeamObj","playerStatCategories","getLeagueStatCategory","homePlayerData","awayPlayerData","playerDataObj","finalPlayerObj","createPlayerDataObj","keyStats","NBA","MLB","rankedPlayers","getNHighestTotals","statsToFind","findPlayerStats","statsArr","arr1","arr2","totalPlayers","concat","entry","Object","keys","n","sort","a","b","statComparison","filter","val","i","obj","name","full_name","abbv","abbreviation","city","stadium","url","Promise","res","rej","fetch","resp","json","statusText","catch","err","typeOfStat","baseURL"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass PlayerContainer extends React.Component {\n    constructStatPlayer(playerObj, stat, len) {\n        let playerPerformance = '';\n        playerPerformance += `${stat.charAt(0).toUpperCase() + stat.slice(1)}: ${playerObj[stat]}`;\n\n        const playerCard = {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%'\n        }\n\n        return (\n            <div style={playerCard}>\n                <div className=\"player-divider\">\n                    {playerObj.display_name}\n                </div>\n                <div className=\"player-divider\">\n                    {playerPerformance}\n                </div>\n                <div className=\"player-divider\">\n                    {playerObj.team_abbreviation}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let players = '';\n\n        if (Array.isArray(this.props.playerInfo)) {\n            players = [];\n\n            this.props.playerInfo.forEach((player) => {\n                players.push(this.constructStatPlayer(player, this.props.stat, this.props.playerInfo.length));\n            });\n        }\n\n        return (\n            <div className=\"player-container\">\n                <div className=\"players\">\n                    {players}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GameContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"game-container\">\n                {/* <p>{this.props.gameStatus}</p>\n                <p>{this.props.gameScore}</p>\n                <p>{this.props.teams}</p> */}\n            </div>\n        );\n    }\n}\n\nclass Boxscore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameStatus: '',\n            league: '',\n            gameInfo: {},\n            playerInfo: {}\n        }\n    }\n\n    async getGameInfo(leagueType) {\n        const gameInfo = await getGameInfo(leagueType);\n        const gameScore = await getGameScore(leagueType);\n        const teamInfo = await getTeamInfo(leagueType);\n        const playerInfo = await getPlayerInfo(leagueType);\n        let stateObj = {\n            league: leagueType\n        };\n\n        stateObj.gameStatus = gameInfo.status;\n        stateObj.location = gameInfo.location;\n        stateObj.scoreInfo = gameScore;\n        stateObj.teams = teamInfo;\n        stateObj.playerInfo = playerInfo;\n        \n        return stateObj;\n    }\n\n    componentDidMount() {\n        this.getGameInfo('NBA')\n            .then((newState) => {\n                this.setState(newState);\n            });\n    }\n\n    render() {\n        const stat = 'points';\n\n        return (\n            <div className=\"boxscore-container\">\n                <GameContainer gameStatus={this.state.gameStatus}\n                               gameScore={this.state.scoreInfo}\n                               teams={this.state.teams}/>\n                <PlayerContainer playerInfo={this.state.playerInfo}\n                                 stat={stat}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Boxscore />,\n    document.getElementById('root')\n);\n\n/* ========== HELPER FUNCTIONS ========== */\n\nasync function getGameInfo(leagueType) {\n    const apiEndpoint = apiURLConstructor(leagueType, 'event_information')\n    const eventData = await fetchUrlData(apiEndpoint);\n    const returnObj = {\n        status: eventData.status,\n        location: constructLocObj(eventData.site)\n    };\n\n    return returnObj\n}\n\nasync function getGameScore(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_period_scores');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_period_scores');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: homeData,\n        away: awayData\n    }\n\n    return returnObj;\n}\n\nasync function getTeamInfo(leagueType) {\n    const homeEndpoint = apiURLConstructor(leagueType, 'home_team');\n    const awayEndpoint = apiURLConstructor(leagueType, 'away_team');\n    const homeData = await fetchUrlData(homeEndpoint);\n    const awayData = await fetchUrlData(awayEndpoint);\n    const returnObj = {\n        home: constructTeamObj(homeData),\n        away: constructTeamObj(awayData)\n    }\n\n    return returnObj;\n}\n\nasync function getPlayerInfo(leagueType) {\n    const playerStatCategories = getLeagueStatCategory(leagueType);\n    const homeEndpoint = apiURLConstructor(leagueType, playerStatCategories[0]);\n    const awayEndpoint = apiURLConstructor(leagueType, playerStatCategories[1]);\n    const homePlayerData = await fetchUrlData(homeEndpoint);\n    const awayPlayerData = await fetchUrlData(awayEndpoint);\n    const playerDataObj = {\n        home: homePlayerData,\n        away: awayPlayerData\n    };\n    const finalPlayerObj = createPlayerDataObj(leagueType, playerDataObj);\n\n    return finalPlayerObj;\n}\n\nasync function createPlayerDataObj(leagueType, playerDataObj) {\n    const keyStats = {\n        NBA: 'points',\n        MLB: ['win', 'loss', 'save']\n    }\n\n    if (!Array.isArray(keyStats[leagueType])) {\n        const stat = keyStats[leagueType];\n        const rankedPlayers = getNHighestTotals(playerDataObj.home, playerDataObj.away, stat, 3);\n        \n        return rankedPlayers\n    } else {\n        const statsToFind = keyStats[leagueType];\n        const players = findPlayerStats(statsToFind, playerDataObj.home, playerDataObj.away);\n\n        return players;\n    }\n}\n\nfunction findPlayerStats(statsArr, arr1, arr2) {\n    const totalPlayers = arr1.concat(arr2);\n    let returnObj = {};\n\n    for (let entry of totalPlayers) {\n        if (entry[statsArr[0]]) {\n            returnObj[statsArr[0]] = entry;\n        } else if (entry[statsArr[1]]) {\n            returnObj[statsArr[1]] = entry;\n        } else if (entry[statsArr[2]]) {\n            returnObj[statsArr[2]] = entry;\n        }\n\n        // Max amount we can give back\n        if (Object.keys(returnObj).length === 3) {\n            break;\n        }\n    }\n\n    return returnObj;\n}\n\nfunction getNHighestTotals(arr1, arr2, stat, n) {\n    const totalPlayers = arr1.concat(arr2);\n\n    return totalPlayers\n        .sort((a, b) => statComparison(a, b, stat))\n        .slice()\n        .filter((val, i) => {\n            return i < n;\n        });\n}\n\nfunction statComparison(a, b, stat) {\n    if (b[stat] > a[stat]) {\n        return 1;\n    } else if (a[stat] > b[stat]) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nfunction getLeagueStatCategory(leagueType) {\n    if (leagueType === 'NBA') {\n        return ['home_stats', 'away_stats'];\n    } else {\n        return ['home_pitchers', 'away_pitchers']\n    }\n}\n\nfunction constructTeamObj(obj) {\n    return {\n        name: obj.full_name,\n        abbv: obj.abbreviation\n    };\n}\n\nfunction constructLocObj(obj) {\n    return {\n        name: `${obj.city}, ${obj.state}`,\n        stadium: obj.name\n    };\n}\n\n/**\n * @name fetchUrlData\n * @param {String} url API endpoint to hit\n * @returns {void}\n */\nfunction fetchUrlData(url) {\n    return new Promise((res, rej) => {\n        // Get our endpoint data\n        fetch(url)\n            .then((resp) => {\n                // If it came back propertly, return it\n                if (resp.status === 200) {\n                    res(resp.json());\n                // Otherwise send the error\n                } else {\n                    rej(resp.statusText);\n                }\n            })\n            .catch((err) => {\n                rej(err);\n            });\n    });\n}\n\n/**\n * @name apiURLConstructor\n * @param {String} league NBA vs. MLB\n * @param {String} typeOfStat What aggregator stat would you like\n */\nfunction apiURLConstructor(league, typeOfStat) {\n    let baseURL = '/api/games';\n\n    if (league) {\n        baseURL += `/${league.toUpperCase()}`;\n    }\n\n    if (typeOfStat) {\n        baseURL += `?stats=${typeOfStat}`;\n    }\n\n    return baseURL;\n}"]},"metadata":{},"sourceType":"module"}